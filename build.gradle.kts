import org.jetbrains.intellij.platform.gradle.TestFrameworkType
import org.jetbrains.intellij.platform.gradle.tasks.VerifyPluginTask
import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id("org.jetbrains.intellij.platform") version "2.6.0"
    java
    kotlin("jvm") version "2.1.21"
}

group = "com.asyncapi.plugin.idea"
version = "3.1.0+jre21"

repositories {
    mavenCentral()
    intellijPlatform {
        jetbrainsRuntime()
        defaultRepositories()
    }
}

dependencies {
    intellijPlatform {
        /*
            Our developers believe that you likely built the plugin against version 2024.2, which includes
            a companion object in this class. As a result, the generated bytecode references it. To ensure compatibility,
            the plugin should be built against the lowest supported version, which in this case is 2022.3.

            Please adjust the IntelliJ version to 2022.3 in the Gradle build script and try building the plugin again.
         */
        intellijIdeaCommunity("2024.3", useInstaller = false) // MUST NOT be changed

        // Plugin Dependencies. Uses `platformBundledPlugins` property from the gradle.properties file for bundled IntelliJ Platform plugins.
        bundledPlugins(listOf(
            "org.jetbrains.plugins.yaml",
            "com.intellij.modules.json"
        ))

        pluginVerifier()
        jetbrainsRuntime()
        testFramework(TestFrameworkType.Platform)
    }

    implementation("com.fasterxml.jackson.core:jackson-core:2.19.1")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.19.1")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.19.1")

    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.13.1")
    testImplementation("junit:junit:4.13.2")
}

// See https://plugins.jetbrains.com/docs/intellij/tools-intellij-platform-gradle-plugin-extension.html
intellijPlatform {
    instrumentCode = true

    pluginConfiguration {
        description = providers.fileContents(
            layout.projectDirectory.file("src/main/resources/META-INF/description.html")
        ).asText

        changeNotes = """
            <h3>Updated</h3>
            <ul>
                <li>New version of AsyncAPI JSON Schema</li>
                <ul>
                    <li>Kafka bindings 0.5.0</li>
                    <li>Info - LinkedIn extension</li>
                    <li>Info - X extension</li>
                </ul>
            </ul>
            <h3>Added</h3>
            <ul>
                <li>Multiformat schema now supports XML format</li>
                <li>Own <code>FileEditor</code> for AsyncAPI files</li>
            </ul>
        """.trimIndent()
    }

    pluginVerification {
        failureLevel = listOf(
            VerifyPluginTask.FailureLevel.INVALID_PLUGIN,
            VerifyPluginTask.FailureLevel.COMPATIBILITY_PROBLEMS,
            VerifyPluginTask.FailureLevel.NOT_DYNAMIC,
            VerifyPluginTask.FailureLevel.MISSING_DEPENDENCIES,
        )

        ides {
            ides(listOf(
                "2024.3",
                "2024.3.1",
                "2024.3.2",
                "2024.3.3",
                "2024.3.4",
                "2025.1",
            ))
        }
    }
}

tasks {
    patchPluginXml {
        sinceBuild = "243"
        untilBuild = provider { null }
    }
}

tasks {
    test {
        useJUnitPlatform()
    }
}

kotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_21)
    }
    jvmToolchain {
        this.languageVersion.set(JavaLanguageVersion.of(21))
    }
}
