{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "AsyncAPI 3.0.0 schema.",
  "description": "!!Auto generated!! \n Do not manually edit. ",
  "type": "object",
  "required": [ "asyncapi", "info" ],
  "properties": {
    "id": {
      "description": "A unique id representing the application.",
      "type": "string",
      "format": "uri"
    },
    "asyncapi": {
      "description": "The AsyncAPI specification version of this document.",
      "type": "string",
      "const": "3.0.0"
    },
    "channels": {
      "$ref": "#/definitions/channels"
    },
    "components": {
      "$ref": "#/definitions/components"
    },
    "defaultContentType": {
      "description": "Default content type to use when encoding/decoding a message's payload.",
      "type": "string"
    },
    "info": {
      "$ref": "#/definitions/info"
    },
    "operations": {
      "$ref": "#/definitions/operations"
    },
    "servers": {
      "$ref": "#/definitions/servers"
    }
  },
  "patternProperties": {
    "^x-[\\w\\d\\.\\x2d_]+$": {
      "$ref": "#/definitions/specificationExtension"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "APIKeyHTTPSecurityScheme": {
      "examples": [
        {
          "type": "httpApiKey",
          "in": "header",
          "name": "api_key"
        }
      ],
      "type": "object",
      "required": [ "type", "name", "in" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "httpApiKey" ]
        },
        "in": {
          "description": "The location of the API key",
          "type": "string",
          "enum": [ "header", "query", "cookie" ]
        },
        "name": {
          "description": "The name of the header, query or cookie parameter to be used.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "BearerHTTPSecurityScheme": {
      "type": "object",
      "required": [ "type", "scheme" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "http" ]
        },
        "bearerFormat": {
          "description": "A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.",
          "type": "string"
        },
        "scheme": {
          "description": "The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235.",
          "type": "string",
          "enum": [ "bearer" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "HTTPSecurityScheme": {
      "oneOf": [
        {
          "$ref": "#/definitions/NonBearerHTTPSecurityScheme"
        },
        {
          "$ref": "#/definitions/BearerHTTPSecurityScheme"
        },
        {
          "$ref": "#/definitions/APIKeyHTTPSecurityScheme"
        }
      ]
    },
    "NonBearerHTTPSecurityScheme": {
      "type": "object",
      "not": {
        "type": "object",
        "properties": {
          "scheme": {
            "description": "A short description for security scheme.",
            "type": "string",
            "enum": [ "bearer" ]
          }
        }
      },
      "required": [ "scheme", "type" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "http" ]
        },
        "scheme": {
          "description": "The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "Reference": {
      "description": "A simple object to allow referencing other components in the specification, internally and externally.",
      "examples": [
        {
          "$ref": "#/components/schemas/Pet"
        }
      ],
      "type": "object",
      "required": [ "$ref" ],
      "properties": {
        "$ref": {
          "description": "The reference string.",
          "$ref": "#/definitions/ReferenceObject"
        }
      }
    },
    "ReferenceObject": {
      "type": "string",
      "format": "uri-reference"
    },
    "SaslGssapiSecurityScheme": {
      "examples": [
        {
          "type": "scramSha512"
        }
      ],
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "gssapi" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "SaslPlainSecurityScheme": {
      "examples": [
        {
          "type": "scramSha512"
        }
      ],
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme. Valid values",
          "type": "string",
          "enum": [ "plain" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "SaslScramSecurityScheme": {
      "examples": [
        {
          "type": "scramSha512"
        }
      ],
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "scramSha256", "scramSha512" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "SaslSecurityScheme": {
      "oneOf": [
        {
          "$ref": "#/definitions/SaslPlainSecurityScheme"
        },
        {
          "$ref": "#/definitions/SaslScramSecurityScheme"
        },
        {
          "$ref": "#/definitions/SaslGssapiSecurityScheme"
        }
      ]
    },
    "SecurityScheme": {
      "description": "Defines a security scheme that can be used by the operations.",
      "examples": [
        {
          "type": "userPassword"
        }
      ],
      "oneOf": [
        {
          "$ref": "#/definitions/userPassword"
        },
        {
          "$ref": "#/definitions/apiKey"
        },
        {
          "$ref": "#/definitions/X509"
        },
        {
          "$ref": "#/definitions/symmetricEncryption"
        },
        {
          "$ref": "#/definitions/asymmetricEncryption"
        },
        {
          "$ref": "#/definitions/HTTPSecurityScheme"
        },
        {
          "$ref": "#/definitions/oauth2Flows"
        },
        {
          "$ref": "#/definitions/openIdConnect"
        },
        {
          "$ref": "#/definitions/SaslSecurityScheme"
        }
      ]
    },
    "X509": {
      "examples": [
        {
          "type": "X509"
        }
      ],
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [ "X509" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "anySchema": {
      "description": "An object representing either a schema or a multiFormatSchema based on the existence of the 'schema' property. If the property 'schema' is present, use the multi-format schema. Use the default AsyncAPI Schema otherwise.",
      "if": {
        "required": [ "schema" ]
      },
      "then": {
        "$ref": "#/definitions/multiFormatSchema"
      },
      "else": {
        "$ref": "#/definitions/schema"
      }
    },
    "apiKey": {
      "examples": [
        {
          "type": "apiKey",
          "in": "user"
        }
      ],
      "type": "object",
      "required": [ "type", "in" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme",
          "type": "string",
          "enum": [ "apiKey" ]
        },
        "in": {
          "description": " The location of the API key.",
          "type": "string",
          "enum": [ "user", "password" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "asymmetricEncryption": {
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "asymmetricEncryption" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "avroSchema_v1": {
      "title": "Avro Schema Definition",
      "description": "Json-Schema definition for Avro AVSC files.",
      "oneOf": [
        {
          "$ref": "#/definitions/avroSchema_v1/definitions/avroSchema"
        }
      ],
      "definitions": {
        "avroArray": {
          "title": "Array",
          "description": "An array",
          "type": "object",
          "required": [ "type", "items" ],
          "properties": {
            "type": {
              "type": "string",
              "const": "array"
            },
            "items": {
              "$ref": "#/definitions/avroSchema_v1/definitions/types"
            },
            "aliases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/name"
              }
            },
            "doc": {
              "type": "string"
            },
            "name": {
              "$ref": "#/definitions/avroSchema_v1/definitions/name"
            },
            "namespace": {
              "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
            }
          }
        },
        "avroEnum": {
          "title": "Enum",
          "description": "An enumeration",
          "type": "object",
          "required": [ "type", "name", "symbols" ],
          "properties": {
            "type": {
              "type": "string",
              "const": "enum"
            },
            "aliases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/name"
              }
            },
            "doc": {
              "type": "string"
            },
            "name": {
              "$ref": "#/definitions/avroSchema_v1/definitions/name"
            },
            "namespace": {
              "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
            },
            "symbols": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/name"
              }
            }
          }
        },
        "avroField": {
          "title": "Field",
          "description": "A field within a Record",
          "type": "object",
          "required": [ "name", "type" ],
          "properties": {
            "default": true,
            "type": {
              "$ref": "#/definitions/avroSchema_v1/definitions/types"
            },
            "aliases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/name"
              }
            },
            "doc": {
              "type": "string"
            },
            "name": {
              "$ref": "#/definitions/avroSchema_v1/definitions/name"
            },
            "order": {
              "enum": [ "ascending", "descending", "ignore" ]
            }
          }
        },
        "avroFixed": {
          "title": "Fixed",
          "description": "A fixed sized array of bytes",
          "type": "object",
          "required": [ "type", "name", "size" ],
          "properties": {
            "type": {
              "type": "string",
              "const": "fixed"
            },
            "aliases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/name"
              }
            },
            "doc": {
              "type": "string"
            },
            "name": {
              "$ref": "#/definitions/avroSchema_v1/definitions/name"
            },
            "namespace": {
              "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
            },
            "size": {
              "type": "number"
            }
          }
        },
        "avroMap": {
          "title": "Map",
          "description": "A map of values",
          "type": "object",
          "required": [ "type", "values" ],
          "properties": {
            "type": {
              "type": "string",
              "const": "map"
            },
            "aliases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/name"
              }
            },
            "doc": {
              "type": "string"
            },
            "name": {
              "$ref": "#/definitions/avroSchema_v1/definitions/name"
            },
            "namespace": {
              "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
            },
            "values": {
              "$ref": "#/definitions/avroSchema_v1/definitions/types"
            }
          }
        },
        "avroRecord": {
          "title": "Record",
          "description": "A Record",
          "type": "object",
          "required": [ "type", "name", "fields" ],
          "properties": {
            "type": {
              "type": "string",
              "const": "record"
            },
            "aliases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/name"
              }
            },
            "doc": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/avroSchema_v1/definitions/avroField"
              }
            },
            "name": {
              "$ref": "#/definitions/avroSchema_v1/definitions/name"
            },
            "namespace": {
              "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
            }
          }
        },
        "avroSchema": {
          "title": "Avro Schema",
          "description": "Root Schema",
          "oneOf": [
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/types"
            }
          ]
        },
        "avroUnion": {
          "title": "Union",
          "description": "A Union of types",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/avroSchema_v1/definitions/avroSchema"
          }
        },
        "customTypeReference": {
          "title": "Custom Type",
          "description": "Reference to a ComplexType",
          "type": "string",
          "not": {
            "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
          },
          "pattern": "^[A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*$"
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
        },
        "namespace": {
          "type": "string",
          "pattern": "^([A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*)*$"
        },
        "primitiveType": {
          "title": "Primitive Type",
          "description": "Basic type primitives.",
          "type": "string",
          "enum": [
            "null",
            "boolean",
            "int",
            "long",
            "float",
            "double",
            "bytes",
            "string"
          ]
        },
        "primitiveTypeWithMetadata": {
          "title": "Primitive Type With Metadata",
          "description": "A primitive type with metadata attached.",
          "type": "object",
          "required": [ "type" ],
          "properties": {
            "type": {
              "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
            }
          }
        },
        "types": {
          "title": "Avro Types",
          "description": "Allowed Avro types",
          "oneOf": [
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/primitiveTypeWithMetadata"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/customTypeReference"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/avroRecord"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/avroEnum"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/avroArray"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/avroMap"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/avroFixed"
            },
            {
              "$ref": "#/definitions/avroSchema_v1/definitions/avroUnion"
            }
          ]
        }
      }
    },
    "bindings-amqp-0.3.0-channel": {
      "title": "AMQP channel bindings object",
      "description": "This object contains information about the channel representation in AMQP.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "exchange": {
            "type": "topic",
            "autoDelete": false,
            "durable": true,
            "name": "myExchange",
            "vhost": "/"
          },
          "is": "routingKey"
        },
        {
          "bindingVersion": "0.3.0",
          "is": "queue",
          "queue": {
            "autoDelete": false,
            "durable": true,
            "exclusive": true,
            "name": "my-queue-name",
            "vhost": "/"
          }
        }
      ],
      "type": "object",
      "oneOf": [
        {
          "not": {
            "required": [ "queue" ]
          },
          "required": [ "exchange" ],
          "properties": {
            "is": {
              "const": "routingKey"
            }
          }
        },
        {
          "not": {
            "required": [ "exchange" ]
          },
          "required": [ "queue" ],
          "properties": {
            "is": {
              "const": "queue"
            }
          }
        }
      ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "exchange": {
          "description": "When is=routingKey, this object defines the exchange properties.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the exchange. Can be either 'topic', 'direct', 'fanout', 'default' or 'headers'.",
              "type": "string",
              "enum": [ "topic", "direct", "fanout", "default", "headers" ]
            },
            "autoDelete": {
              "description": "Whether the exchange should be deleted when the last queue is unbound from it.",
              "type": "boolean"
            },
            "durable": {
              "description": "Whether the exchange should survive broker restarts or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The name of the exchange. It MUST NOT exceed 255 characters long.",
              "type": "string",
              "maxLength": 255
            },
            "vhost": {
              "description": "The virtual host of the exchange. Defaults to '/'.",
              "default": "/",
              "type": "string"
            }
          }
        },
        "is": {
          "description": "Defines what type of channel is it. Can be either 'queue' or 'routingKey' (default).",
          "type": "string",
          "enum": [ "queue", "routingKey" ]
        },
        "queue": {
          "description": "When is=queue, this object defines the queue properties.",
          "type": "object",
          "properties": {
            "autoDelete": {
              "description": "Whether the queue should be deleted when the last consumer unsubscribes.",
              "type": "boolean"
            },
            "durable": {
              "description": "Whether the queue should survive broker restarts or not.",
              "type": "boolean"
            },
            "exclusive": {
              "description": "Whether the queue should be used only by one connection or not.",
              "type": "boolean"
            },
            "name": {
              "description": "The name of the queue. It MUST NOT exceed 255 characters long.",
              "type": "string",
              "maxLength": 255
            },
            "vhost": {
              "description": "The virtual host of the queue. Defaults to '/'.",
              "default": "/",
              "type": "string"
            }
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-amqp-0.3.0-message": {
      "title": "AMQP message bindings object",
      "description": "This object contains information about the message representation in AMQP.",
      "examples": [
        {
          "contentEncoding": "gzip",
          "bindingVersion": "0.3.0",
          "messageType": "user.signup"
        }
      ],
      "type": "object",
      "properties": {
        "contentEncoding": {
          "description": "A MIME encoding for the message content.",
          "type": "string"
        },
        "bindingVersion": {
          "description": "The version of this binding. If omitted, \"latest\" MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "messageType": {
          "description": "Application-specific message type.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-amqp-0.3.0-operation": {
      "title": "AMQP operation bindings object",
      "description": "This object contains information about the operation representation in AMQP.",
      "examples": [
        {
          "ack": false,
          "bcc": [ "external.audit" ],
          "bindingVersion": "0.3.0",
          "cc": [ "user.logs" ],
          "deliveryMode": 2,
          "expiration": 100000,
          "mandatory": false,
          "priority": 10,
          "timestamp": true,
          "userId": "guest"
        }
      ],
      "type": "object",
      "properties": {
        "ack": {
          "description": "Whether the consumer should ack the message or not.",
          "type": "boolean"
        },
        "bcc": {
          "description": "Like cc but consumers will not receive this information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bindingVersion": {
          "description": "The version of this binding. If omitted, \"latest\" MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "cc": {
          "description": "The routing keys the message should be routed to at the time of publishing.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deliveryMode": {
          "description": "Delivery mode of the message. Its value MUST be either 1 (transient) or 2 (persistent).",
          "type": "integer",
          "enum": [ 1, 2 ]
        },
        "expiration": {
          "description": "TTL (Time-To-Live) for the message. It MUST be greater than or equal to zero.",
          "type": "integer",
          "minimum": 0
        },
        "mandatory": {
          "description": "Whether the message is mandatory or not.",
          "type": "boolean"
        },
        "priority": {
          "description": "A priority for the message.",
          "type": "integer"
        },
        "timestamp": {
          "description": "Whether the message should include a timestamp or not.",
          "type": "boolean"
        },
        "userId": {
          "description": "Identifies the user who has sent the message.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-anypointmq-0.0.1-channel": {
      "title": "Anypoint MQ channel bindings object",
      "description": "This object contains configuration for describing an Anypoint MQ exchange, queue, or FIFO queue as an AsyncAPI channel. This objects only contains configuration that can not be provided in the AsyncAPI standard channel object.",
      "examples": [
        {
          "bindingVersion": "0.0.1",
          "destination": "user-signup-exchg",
          "destinationType": "exchange"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.0.1" ]
        },
        "destination": {
          "description": "The destination (queue or exchange) name for this channel. SHOULD only be specified if the channel name differs from the actual destination name, such as when the channel name is not a valid destination name in Anypoint MQ. Defaults to the channel name.",
          "type": "string"
        },
        "destinationType": {
          "description": "The type of destination. SHOULD be specified to document the messaging model (publish/subscribe, point-to-point, strict message ordering) supported by this channel.",
          "default": "queue",
          "type": "string",
          "enum": [ "exchange", "queue", "fifo-queue" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-anypointmq-0.0.1-message": {
      "title": "Anypoint MQ message bindings object",
      "description": "This object contains configuration for describing an Anypoint MQ message as an AsyncAPI message. This objects only contains configuration that can not be provided in the AsyncAPI standard message object.",
      "examples": [
        {
          "bindingVersion": "0.0.1",
          "headers": {
            "type": "object",
            "properties": {
              "messageId": {
                "type": "string"
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.0.1" ]
        },
        "headers": {
          "description": "A Schema object containing the definitions for Anypoint MQ-specific headers (protocol headers). This schema MUST be of type 'object' and have a 'properties' key. Examples of Anypoint MQ protocol headers are 'messageId' and 'messageGroupId'.",
          "oneOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-googlepubsub-0.2.0-channel": {
      "title": "Cloud Pub/Sub Channel Schema",
      "description": "This object contains information about the channel representation for Google Cloud Pub/Sub.",
      "examples": [
        {
          "labels": {
            "label1": "value1",
            "label2": "value2"
          },
          "messageRetentionDuration": "86400s",
          "messageStoragePolicy": {
            "allowedPersistenceRegions": [ "us-central1", "us-east1" ]
          },
          "schemaSettings": {
            "encoding": "json",
            "name": "projects/your-project-id/schemas/your-schema"
          }
        }
      ],
      "type": "object",
      "required": [ "schemaSettings" ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "labels": {
          "type": "object"
        },
        "messageRetentionDuration": {
          "type": "string"
        },
        "messageStoragePolicy": {
          "type": "object",
          "properties": {
            "allowedPersistenceRegions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "schemaSettings": {
          "type": "object",
          "additionalItems": false,
          "required": [ "encoding", "name" ],
          "properties": {
            "encoding": {
              "type": "string"
            },
            "firstRevisionId": {
              "type": "string"
            },
            "lastRevisionId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-googlepubsub-0.2.0-message": {
      "title": "Cloud Pub/Sub Channel Schema",
      "description": "This object contains information about the message representation for Google Cloud Pub/Sub.",
      "examples": [
        {
          "schema": {
            "name": "projects/your-project-id/schemas/your-avro-schema-id"
          }
        },
        {
          "schema": {
            "name": "projects/your-project-id/schemas/your-protobuf-schema-id"
          }
        }
      ],
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object"
        },
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "orderingKey": {
          "type": "string"
        },
        "schema": {
          "type": "object",
          "additionalItems": false,
          "required": [ "name" ],
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-http-0.2.0-message": {
      "title": "HTTP message bindings object",
      "description": "This object contains information about the message representation in HTTP.",
      "examples": [
        {
          "bindingVersion": "0.2.0",
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string",
                "enum": [ "application/json" ]
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, \"latest\" MUST be assumed.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "headers": {
          "description": "\tA Schema object containing the definitions for HTTP-specific headers. This schema MUST be of type 'object' and have a 'properties' key.",
          "$ref": "#/definitions/schema"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-http-0.2.0-operation": {
      "title": "HTTP operation bindings object",
      "description": "This object contains information about the operation representation in HTTP.",
      "examples": [
        {
          "bindingVersion": "0.2.0",
          "query": {
            "type": "object",
            "required": [ "companyId" ],
            "properties": {
              "companyId": {
                "description": "The Id of the company.",
                "type": "number",
                "minimum": 1
              }
            },
            "additionalProperties": false
          }
        },
        {
          "bindingVersion": "0.2.0",
          "method": "GET",
          "query": {
            "type": "object",
            "required": [ "companyId" ],
            "properties": {
              "companyId": {
                "description": "The Id of the company.",
                "type": "number",
                "minimum": 1
              }
            },
            "additionalProperties": false
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "method": {
          "description": "When 'type' is 'request', this is the HTTP method, otherwise it MUST be ignored. Its value MUST be one of 'GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS', 'CONNECT', and 'TRACE'.",
          "type": "string",
          "enum": [
            "GET",
            "PUT",
            "POST",
            "PATCH",
            "DELETE",
            "HEAD",
            "OPTIONS",
            "CONNECT",
            "TRACE"
          ]
        },
        "query": {
          "description": "A Schema object containing the definitions for each query parameter. This schema MUST be of type 'object' and have a properties key.",
          "$ref": "#/definitions/schema"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-http-0.3.0-message": {
      "title": "HTTP message bindings object",
      "description": "This object contains information about the message representation in HTTP.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string",
                "enum": [ "application/json" ]
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, \"latest\" MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "headers": {
          "description": "\tA Schema object containing the definitions for HTTP-specific headers. This schema MUST be of type 'object' and have a 'properties' key.",
          "$ref": "#/definitions/schema"
        },
        "statusCode": {
          "description": "The HTTP response status code according to [RFC 9110](https://httpwg.org/specs/rfc9110.html#overview.of.status.codes). `statusCode` is only relevant for messages referenced by the [Operation Reply Object](https://www.asyncapi.com/docs/reference/specification/v3.0.0#operationReplyObject), as it defines the status code for the response. In all other cases, this value can be safely ignored.",
          "type": "number"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-http-0.3.0-operation": {
      "title": "HTTP operation bindings object",
      "description": "This object contains information about the operation representation in HTTP.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "query": {
            "type": "object",
            "required": [ "companyId" ],
            "properties": {
              "companyId": {
                "description": "The Id of the company.",
                "type": "number",
                "minimum": 1
              }
            },
            "additionalProperties": false
          }
        },
        {
          "bindingVersion": "0.3.0",
          "method": "GET",
          "query": {
            "type": "object",
            "required": [ "companyId" ],
            "properties": {
              "companyId": {
                "description": "The Id of the company.",
                "type": "number",
                "minimum": 1
              }
            },
            "additionalProperties": false
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "method": {
          "description": "When 'type' is 'request', this is the HTTP method, otherwise it MUST be ignored. Its value MUST be one of 'GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS', 'CONNECT', and 'TRACE'.",
          "type": "string",
          "enum": [
            "GET",
            "PUT",
            "POST",
            "PATCH",
            "DELETE",
            "HEAD",
            "OPTIONS",
            "CONNECT",
            "TRACE"
          ]
        },
        "query": {
          "description": "A Schema object containing the definitions for each query parameter. This schema MUST be of type 'object' and have a properties key.",
          "$ref": "#/definitions/schema"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-ibmmq-0.1.0-channel": {
      "title": "IBM MQ channel bindings object",
      "description": "This object contains information about the channel representation in IBM MQ. Each channel corresponds to a Queue or Topic within IBM MQ.",
      "examples": [
        {
          "bindingVersion": "0.1.0",
          "destinationType": "topic",
          "topic": {
            "objectName": "myTopicName"
          }
        },
        {
          "bindingVersion": "0.1.0",
          "destinationType": "queue",
          "queue": {
            "exclusive": true,
            "objectName": "myQueueName"
          }
        }
      ],
      "type": "object",
      "oneOf": [
        {
          "not": {
            "required": [ "queue" ]
          },
          "properties": {
            "destinationType": {
              "const": "topic"
            }
          }
        },
        {
          "not": {
            "required": [ "topic" ]
          },
          "required": [ "queue" ],
          "properties": {
            "destinationType": {
              "const": "queue"
            }
          }
        }
      ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.1.0" ]
        },
        "destinationType": {
          "description": "Defines the type of AsyncAPI channel.",
          "default": "topic",
          "type": "string",
          "enum": [ "topic", "queue" ]
        },
        "maxMsgLength": {
          "description": "The maximum length of the physical message (in bytes) accepted by the Topic or Queue. Messages produced that are greater in size than this value may fail to be delivered. More information on the maximum message length can be found on this [page](https://www.ibm.com/support/knowledgecenter/SSFKSJ_latest/com.ibm.mq.ref.dev.doc/q097520_.html) in the IBM MQ Knowledge Center.",
          "type": "integer",
          "maximum": 104857600,
          "minimum": 0
        },
        "queue": {
          "description": "Defines the properties of a queue.",
          "type": "object",
          "required": [ "objectName" ],
          "properties": {
            "exclusive": {
              "description": "Specifies if it is recommended to open the queue exclusively.",
              "default": false,
              "type": "boolean"
            },
            "isPartitioned": {
              "description": "Defines if the queue is a cluster queue and therefore partitioned. If 'true', a binding option MAY be specified when accessing the queue. More information on binding options can be found on this page in the IBM MQ Knowledge Center.",
              "default": false,
              "type": "boolean"
            },
            "objectName": {
              "description": "Defines the name of the IBM MQ queue associated with the channel.",
              "type": "string",
              "maxLength": 48
            }
          }
        },
        "topic": {
          "description": "Defines the properties of a topic.",
          "type": "object",
          "properties": {
            "durablePermitted": {
              "description": "Defines if the subscription may be durable.",
              "default": true,
              "type": "boolean"
            },
            "lastMsgRetained": {
              "description": "Defines if the last message published will be made available to new subscriptions.",
              "default": false,
              "type": "boolean"
            },
            "objectName": {
              "description": "The name of the IBM MQ topic object.",
              "type": "string",
              "maxLength": 48
            },
            "string": {
              "description": "The value of the IBM MQ topic string to be used.",
              "type": "string",
              "maxLength": 10240
            }
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-ibmmq-0.1.0-message": {
      "title": "IBM MQ message bindings object",
      "description": "This object contains information about the message representation in IBM MQ.",
      "examples": [
        {
          "type": "string",
          "bindingVersion": "0.1.0"
        },
        {
          "description": "JMS stream message",
          "type": "jms",
          "bindingVersion": "0.1.0"
        }
      ],
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "type": {
              "const": "binary"
            }
          }
        },
        {
          "not": {
            "required": [ "headers" ]
          },
          "properties": {
            "type": {
              "const": "jms"
            }
          }
        },
        {
          "not": {
            "required": [ "headers" ]
          },
          "properties": {
            "type": {
              "const": "string"
            }
          }
        }
      ],
      "properties": {
        "description": {
          "description": "Provides additional information for application developers: describes the message type or format.",
          "type": "string"
        },
        "type": {
          "description": "The type of the message.",
          "default": "string",
          "type": "string",
          "enum": [ "string", "jms", "binary" ]
        },
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.1.0" ]
        },
        "expiry": {
          "description": "The recommended setting the client should use for the TTL (Time-To-Live) of the message. This is a period of time expressed in milliseconds and set by the application that puts the message. 'expiry' values are API dependant e.g., MQI and JMS use different units of time and default values for 'unlimited'. General information on IBM MQ message expiry can be found on this [page](https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mqmd-expiry-mqlong) in the IBM MQ Knowledge Center.",
          "default": 0,
          "type": "integer",
          "minimum": 0
        },
        "headers": {
          "description": "Defines the IBM MQ message headers to include with this message. More than one header can be specified as a comma separated list. Supporting information on IBM MQ message formats can be found on this [page](https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mqmd-format-mqchar8) in the IBM MQ Knowledge Center.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-ibmmq-0.1.0-server": {
      "title": "IBM MQ server bindings object",
      "description": "This object contains server connection information about the IBM MQ server, referred to as an IBM MQ queue manager. This object contains additional connectivity information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.1.0",
          "cipherSpec": "ANY_TLS12_OR_HIGHER",
          "groupId": "PRODCLSTR1"
        },
        {
          "bindingVersion": "0.1.0",
          "groupId": "PRODCLSTR1"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.1.0" ]
        },
        "ccdtQueueManagerName": {
          "description": "The name of the IBM MQ queue manager to bind to in the CCDT file.",
          "default": "*",
          "type": "string"
        },
        "cipherSpec": {
          "description": "The recommended cipher specification used to establish a TLS connection between the client and the IBM MQ queue manager. More information on SSL/TLS cipher specifications supported by IBM MQ can be found on this page in the IBM MQ Knowledge Center.",
          "type": "string"
        },
        "groupId": {
          "description": "Defines a logical group of IBM MQ server objects. This is necessary to specify multi-endpoint configurations used in high availability deployments. If omitted, the server object is not part of a group.",
          "type": "string"
        },
        "heartBeatInterval": {
          "description": "The recommended value (in seconds) for the heartbeat sent to the queue manager during periods of inactivity. A value of zero means that no heart beats are sent. A value of 1 means that the client will use the value defined by the queue manager. More information on heart beat interval can be found on this page in the IBM MQ Knowledge Center.",
          "default": 300,
          "type": "integer",
          "maximum": 999999,
          "minimum": 0
        },
        "multiEndpointServer": {
          "description": "If 'multiEndpointServer' is 'true' then multiple connections can be workload balanced and applications should not make assumptions as to where messages are processed. Where message ordering, or affinity to specific message resources is necessary, a single endpoint ('multiEndpointServer' = 'false') may be required.",
          "default": false,
          "type": "boolean"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-jms-0.0.1-channel": {
      "title": "Channel Schema",
      "description": "This object contains configuration for describing a JMS queue, or FIFO queue as an AsyncAPI channel. This objects only contains configuration that can not be provided in the AsyncAPI standard channel object.",
      "examples": [
        {
          "bindingVersion": "0.0.1",
          "destination": "user-signed-up",
          "destinationType": "fifo-queue"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.0.1" ]
        },
        "destination": {
          "description": "The destination (queue) name for this channel. SHOULD only be specified if the channel name differs from the actual destination name, such as when the channel name is not a valid destination name according to the JMS Provider. Defaults to the channel name.",
          "type": "string"
        },
        "destinationType": {
          "description": "The type of destination. SHOULD be specified to document the messaging model (point-to-point, or strict message ordering) supported by this channel.",
          "default": "queue",
          "type": "string",
          "enum": [ "queue", "fifo-queue" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-jms-0.0.1-message": {
      "title": "Message Schema",
      "description": "This object contains configuration for describing a JMS message as an AsyncAPI message. This objects only contains configuration that can not be provided in the AsyncAPI standard message object.",
      "examples": [
        {
          "bindingVersion": "0.0.1",
          "headers": {
            "type": "object",
            "required": [ "JMSMessageID" ],
            "properties": {
              "JMSCorrelationID": {
                "description": "The correlation identifier of the message. A client can use the 'JMSCorrelationID' header field to link one message with another. A typical use is to link a response message with its request message. Since each message sent by a JMS provider is assigned a message ID value, it is convenient to link messages via message ID, such message ID values must start with the 'ID:' prefix. Conversely, application-specified values must not start with the 'ID:' prefix; this is reserved for provider-generated message ID values.",
                "type": [ "string", "null" ]
              },
              "JMSDeliveryMode": {
                "description": "Denotes the delivery mode for the message. This may be set by your JMS Provider on your behalf.",
                "default": "PERSISTENT",
                "type": "string",
                "enum": [ "PERSISTENT", "NON_PERSISTENT" ]
              },
              "JMSExpires": {
                "description": "The time at which the message expires. This may be set by your JMS Provider on your behalf. A value of zero means that the message does not expire. Any non-zero value is the amount of time, measured in milliseconds, that has elapsed since midnight, January 1, 1970, UTC, at which the message will expire.",
                "type": "integer"
              },
              "JMSMessageID": {
                "description": "A unique message identifier. This may be set by your JMS Provider on your behalf.",
                "type": [ "string", "null" ]
              },
              "JMSPriority": {
                "description": "The priority of the message. This may be set by your JMS Provider on your behalf.",
                "default": 4,
                "type": "integer"
              },
              "JMSReplyTo": {
                "description": "The queue or topic that the message sender expects replies to.",
                "type": "string"
              },
              "JMSTimestamp": {
                "description": "The time the message was sent. This may be set by your JMS Provider on your behalf. The time the message was sent. The value of the timestamp is the amount of time, measured in milliseconds, that has elapsed since midnight, January 1, 1970, UTC.",
                "type": "integer"
              },
              "JMSType": {
                "description": "The type of message. Some JMS providers use a message repository that contains the definitions of messages sent by applications. The 'JMSType' header field may reference a message's definition in the provider's repository. The JMS API does not define a standard message definition repository, nor does it define a naming policy for the definitions it contains. Some messaging systems require that a message type definition for each application message be created and that each message specify its type. In order to work with such JMS providers, JMS clients should assign a value to 'JMSType', whether the application makes use of it or not. This ensures that the field is properly set for those providers that require it.",
                "type": [ "string", "null" ]
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.0.1" ]
        },
        "headers": {
          "description": "A Schema object containing the definitions for JMS headers (protocol headers). This schema MUST be of type 'object' and have a 'properties' key. Examples of JMS protocol headers are 'JMSMessageID', 'JMSTimestamp', and 'JMSCorrelationID'.",
          "$ref": "#/definitions/schema"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-jms-0.0.1-server": {
      "title": "Server Schema",
      "description": "This object contains configuration for describing a JMS broker as an AsyncAPI server. This objects only contains configuration that can not be provided in the AsyncAPI standard server object.",
      "examples": [
        {
          "properties": [
            {
              "name": "disableTimeStampsByDefault",
              "value": false
            }
          ],
          "bindingVersion": "0.0.1",
          "clientID": "my-application-1",
          "jmsConnectionFactory": "org.apache.activemq.ActiveMQConnectionFactory"
        }
      ],
      "type": "object",
      "required": [ "jmsConnectionFactory" ],
      "properties": {
        "properties": {
          "description": "Additional properties to set on the JMS ConnectionFactory implementation for the JMS Provider.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bindings-jms-0.0.1-server/definitions/property"
          }
        },
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.0.1" ]
        },
        "clientID": {
          "description": "A client identifier for applications that use this JMS connection factory. If the Client ID Policy is set to 'Restricted' (the default), then configuring a Client ID on the ConnectionFactory prevents more than one JMS client from using a connection from this factory.",
          "type": "string"
        },
        "jmsConnectionFactory": {
          "description": "The classname of the ConnectionFactory implementation for the JMS Provider.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "property": {
          "type": "object",
          "required": [ "name", "value" ],
          "properties": {
            "name": {
              "description": "The name of a property",
              "type": "string"
            },
            "value": {
              "description": "The name of a property",
              "type": [ "string", "boolean", "number", "null" ]
            }
          }
        }
      }
    },
    "bindings-kafka-0.3.0-channel": {
      "title": "Channel Schema",
      "description": "This object contains information about the channel representation in Kafka.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "partitions": 20,
          "replicas": 3,
          "topic": "my-specific-topic"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "partitions": {
          "description": "Number of partitions configured on this topic.",
          "type": "integer",
          "minimum": 1
        },
        "replicas": {
          "description": "Number of replicas configured on this topic.",
          "type": "integer",
          "minimum": 1
        },
        "topic": {
          "description": "Kafka topic name if different from channel name.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.3.0-message": {
      "title": "Message Schema",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "key": {
            "type": "string",
            "enum": [ "myKey" ]
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "apicurio-new",
          "schemaLookupStrategy": "TopicIdStrategy"
        },
        {
          "bindingVersion": "0.3.0",
          "key": {
            "$ref": "path/to/user-create.avsc#/UserCreate"
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "4"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "key": {
          "description": "The message key.",
          "$ref": "#/definitions/schema"
        },
        "schemaIdLocation": {
          "description": "If a Schema Registry is used when performing this operation, tells where the id of schema is stored.",
          "type": "string",
          "enum": [ "header", "payload" ]
        },
        "schemaIdPayloadEncoding": {
          "description": "Number of bytes or vendor specific values when schema id is encoded in payload.",
          "type": "string"
        },
        "schemaLookupStrategy": {
          "description": "Freeform string for any naming strategy class to use. Clients should default to the vendor default if not supplied.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.3.0-operation": {
      "title": "Operation Schema",
      "description": "This object contains information about the operation representation in Kafka.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "clientId": {
            "type": "string",
            "enum": [ "myClientId" ]
          },
          "groupId": {
            "type": "string",
            "enum": [ "myGroupId" ]
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "clientId": {
          "description": "Id of the consumer inside a consumer group.",
          "$ref": "#/definitions/schema"
        },
        "groupId": {
          "description": "Id of the consumer group.",
          "$ref": "#/definitions/schema"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.3.0-server": {
      "title": "Server Schema",
      "description": "This object contains server connection information to a Kafka broker. This object contains additional information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "schemaRegistryUrl": "https://my-schema-registry.com",
          "schemaRegistryVendor": "confluent"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "schemaRegistryUrl": {
          "description": "API URL for the Schema Registry used when producing Kafka messages (if a Schema Registry was used).",
          "type": "string"
        },
        "schemaRegistryVendor": {
          "description": "The vendor of the Schema Registry and Kafka serdes library that should be used.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.4.0-channel": {
      "title": "Channel Schema",
      "description": "This object contains information about the channel representation in Kafka.",
      "examples": [
        {
          "bindingVersion": "0.4.0",
          "partitions": 20,
          "replicas": 3,
          "topic": "my-specific-topic"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.4.0" ]
        },
        "partitions": {
          "description": "Number of partitions configured on this topic.",
          "type": "integer",
          "minimum": 1
        },
        "replicas": {
          "description": "Number of replicas configured on this topic.",
          "type": "integer",
          "minimum": 1
        },
        "topic": {
          "description": "Kafka topic name if different from channel name.",
          "type": "string"
        },
        "topicConfiguration": {
          "description": "Topic configuration properties that are relevant for the API.",
          "type": "object",
          "properties": {
            "cleanup.policy": {
              "description": "The [`cleanup.policy`](https://kafka.apache.org/documentation/#topicconfigs_cleanup.policy) configuration option.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [ "compact", "delete" ]
              }
            },
            "delete.retention.ms": {
              "description": "The [`delete.retention.ms`](https://kafka.apache.org/documentation/#topicconfigs_delete.retention.ms) configuration option.",
              "type": "integer",
              "minimum": 0
            },
            "max.message.bytes": {
              "description": "The [`max.message.bytes`](https://kafka.apache.org/documentation/#topicconfigs_max.message.bytes) configuration option.",
              "type": "integer",
              "minimum": 0
            },
            "retention.bytes": {
              "description": "The [`retention.bytes`](https://kafka.apache.org/documentation/#topicconfigs_retention.bytes) configuration option.",
              "type": "integer",
              "minimum": -1
            },
            "retention.ms": {
              "description": "The [`retention.ms`](https://kafka.apache.org/documentation/#topicconfigs_retention.ms) configuration option.",
              "type": "integer",
              "minimum": -1
            }
          },
          "additionalProperties": false
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.4.0-message": {
      "title": "Message Schema",
      "examples": [
        {
          "bindingVersion": "0.4.0",
          "key": {
            "type": "string",
            "enum": [ "myKey" ]
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "apicurio-new",
          "schemaLookupStrategy": "TopicIdStrategy"
        },
        {
          "bindingVersion": "0.4.0",
          "key": {
            "$ref": "path/to/user-create.avsc#/UserCreate"
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "4"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.4.0" ]
        },
        "key": {
          "description": "The message key.",
          "anyOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/avroSchema_v1"
            }
          ]
        },
        "schemaIdLocation": {
          "description": "If a Schema Registry is used when performing this operation, tells where the id of schema is stored.",
          "type": "string",
          "enum": [ "header", "payload" ]
        },
        "schemaIdPayloadEncoding": {
          "description": "Number of bytes or vendor specific values when schema id is encoded in payload.",
          "type": "string"
        },
        "schemaLookupStrategy": {
          "description": "Freeform string for any naming strategy class to use. Clients should default to the vendor default if not supplied.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.4.0-operation": {
      "title": "Operation Schema",
      "description": "This object contains information about the operation representation in Kafka.",
      "examples": [
        {
          "bindingVersion": "0.4.0",
          "clientId": {
            "type": "string",
            "enum": [ "myClientId" ]
          },
          "groupId": {
            "type": "string",
            "enum": [ "myGroupId" ]
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.4.0" ]
        },
        "clientId": {
          "description": "Id of the consumer inside a consumer group.",
          "$ref": "#/definitions/schema"
        },
        "groupId": {
          "description": "Id of the consumer group.",
          "$ref": "#/definitions/schema"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.4.0-server": {
      "title": "Server Schema",
      "description": "This object contains server connection information to a Kafka broker. This object contains additional information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.4.0",
          "schemaRegistryUrl": "https://my-schema-registry.com",
          "schemaRegistryVendor": "confluent"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.4.0" ]
        },
        "schemaRegistryUrl": {
          "description": "API URL for the Schema Registry used when producing Kafka messages (if a Schema Registry was used).",
          "type": "string"
        },
        "schemaRegistryVendor": {
          "description": "The vendor of the Schema Registry and Kafka serdes library that should be used.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.5.0-channel": {
      "title": "Channel Schema",
      "description": "This object contains information about the channel representation in Kafka.",
      "examples": [
        {
          "bindingVersion": "0.5.0",
          "partitions": 20,
          "replicas": 3,
          "topic": "my-specific-topic"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.5.0" ]
        },
        "partitions": {
          "description": "Number of partitions configured on this topic.",
          "type": "integer",
          "minimum": 1
        },
        "replicas": {
          "description": "Number of replicas configured on this topic.",
          "type": "integer",
          "minimum": 1
        },
        "topic": {
          "description": "Kafka topic name if different from channel name.",
          "type": "string"
        },
        "topicConfiguration": {
          "description": "Topic configuration properties that are relevant for the API.",
          "type": "object",
          "properties": {
            "cleanup.policy": {
              "description": "The [`cleanup.policy`](https://kafka.apache.org/documentation/#topicconfigs_cleanup.policy) configuration option.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [ "compact", "delete" ]
              }
            },
            "confluent.key.schema.validation": {
              "description": "It shows whether the schema validation for the message key is enabled. Vendor specific config. For more details: (https://docs.confluent.io/platform/current/installation/configuration/topic-configs.html#confluent-key-schema-validation)",
              "type": "boolean"
            },
            "confluent.key.subject.name.strategy": {
              "description": "The name of the schema lookup strategy for the message key. Vendor specific config. For more details: (https://docs.confluent.io/platform/current/installation/configuration/topic-configs.html#confluent-key-subject-name-strategy)",
              "type": "string"
            },
            "confluent.value.schema.validation": {
              "description": "It shows whether the schema validation for the message value is enabled. Vendor specific config. For more details: (https://docs.confluent.io/platform/current/installation/configuration/topic-configs.html#confluent-value-schema-validation)",
              "type": "boolean"
            },
            "confluent.value.subject.name.strategy": {
              "description": "The name of the schema lookup strategy for the message value. Vendor specific config. For more details: (https://docs.confluent.io/platform/current/installation/configuration/topic-configs.html#confluent-value-subject-name-strategy)",
              "type": "string"
            },
            "delete.retention.ms": {
              "description": "The [`delete.retention.ms`](https://kafka.apache.org/documentation/#topicconfigs_delete.retention.ms) configuration option.",
              "type": "integer",
              "minimum": 0
            },
            "max.message.bytes": {
              "description": "The [`max.message.bytes`](https://kafka.apache.org/documentation/#topicconfigs_max.message.bytes) configuration option.",
              "type": "integer",
              "minimum": 0
            },
            "retention.bytes": {
              "description": "The [`retention.bytes`](https://kafka.apache.org/documentation/#topicconfigs_retention.bytes) configuration option.",
              "type": "integer",
              "minimum": -1
            },
            "retention.ms": {
              "description": "The [`retention.ms`](https://kafka.apache.org/documentation/#topicconfigs_retention.ms) configuration option.",
              "type": "integer",
              "minimum": -1
            }
          },
          "additionalProperties": true
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.5.0-message": {
      "title": "Message Schema",
      "examples": [
        {
          "bindingVersion": "0.5.0",
          "key": {
            "type": "string",
            "enum": [ "myKey" ]
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "apicurio-new",
          "schemaLookupStrategy": "TopicIdStrategy"
        },
        {
          "bindingVersion": "0.5.0",
          "key": {
            "$ref": "path/to/user-create.avsc#/UserCreate"
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "4"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.5.0" ]
        },
        "key": {
          "description": "The message key.",
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/schema"
            }
          ]
        },
        "schemaIdLocation": {
          "description": "If a Schema Registry is used when performing this operation, tells where the id of schema is stored.",
          "type": "string",
          "enum": [ "header", "payload" ]
        },
        "schemaIdPayloadEncoding": {
          "description": "Number of bytes or vendor specific values when schema id is encoded in payload.",
          "type": "string"
        },
        "schemaLookupStrategy": {
          "description": "Freeform string for any naming strategy class to use. Clients should default to the vendor default if not supplied.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.5.0-operation": {
      "title": "Operation Schema",
      "description": "This object contains information about the operation representation in Kafka.",
      "examples": [
        {
          "bindingVersion": "0.5.0",
          "clientId": {
            "type": "string",
            "enum": [ "myClientId" ]
          },
          "groupId": {
            "type": "string",
            "enum": [ "myGroupId" ]
          }
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.5.0" ]
        },
        "clientId": {
          "description": "Id of the consumer inside a consumer group.",
          "$ref": "#/definitions/schema"
        },
        "groupId": {
          "description": "Id of the consumer group.",
          "$ref": "#/definitions/schema"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-kafka-0.5.0-server": {
      "title": "Server Schema",
      "description": "This object contains server connection information to a Kafka broker. This object contains additional information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.5.0",
          "schemaRegistryUrl": "https://my-schema-registry.com",
          "schemaRegistryVendor": "confluent"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.5.0" ]
        },
        "schemaRegistryUrl": {
          "description": "API URL for the Schema Registry used when producing Kafka messages (if a Schema Registry was used).",
          "type": "string"
        },
        "schemaRegistryVendor": {
          "description": "The vendor of the Schema Registry and Kafka serdes library that should be used.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-mqtt-0.2.0-message": {
      "title": "MQTT message bindings object",
      "description": "This object contains information about the message representation in MQTT.",
      "examples": [
        {
          "bindingVersion": "0.2.0"
        },
        {
          "bindingVersion": "0.2.0",
          "contentType": "application/json",
          "correlationData": {
            "type": "string",
            "format": "uuid"
          },
          "responseTopic": "application/responses"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "contentType": {
          "description": "String describing the content type of the message payload. This should not conflict with the contentType field of the associated AsyncAPI Message object.",
          "type": "string"
        },
        "correlationData": {
          "description": "Correlation Data is used by the sender of the request message to identify which request the response message is for when it is received.",
          "oneOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "payloadFormatIndicator": {
          "description": "1 indicates that the payload is UTF-8 encoded character data.  0 indicates that the payload format is unspecified.",
          "default": 0,
          "type": "integer",
          "enum": [ 0, 1 ]
        },
        "responseTopic": {
          "description": "The topic (channel URI) to be used for a response message.",
          "oneOf": [
            {
              "type": "string",
              "format": "uri-template",
              "minLength": 1
            },
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-mqtt-0.2.0-operation": {
      "title": "MQTT operation bindings object",
      "description": "This object contains information about the operation representation in MQTT.",
      "examples": [
        {
          "bindingVersion": "0.2.0",
          "messageExpiryInterval": 60,
          "qos": 2,
          "retain": true
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "messageExpiryInterval": {
          "description": "Lifetime of the message in seconds",
          "oneOf": [
            {
              "type": "integer",
              "maximum": 4294967295,
              "minimum": 0
            },
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "qos": {
          "description": "Defines the Quality of Service (QoS) levels for the message flow between client and server. Its value MUST be either 0 (At most once delivery), 1 (At least once delivery), or 2 (Exactly once delivery).",
          "type": "integer",
          "enum": [ 0, 1, 2 ]
        },
        "retain": {
          "description": "Whether the broker should retain the message or not.",
          "type": "boolean"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-mqtt-0.2.0-server": {
      "title": "Server Schema",
      "description": "This object contains information about the server representation in MQTT.",
      "examples": [
        {
          "bindingVersion": "0.2.0",
          "cleanSession": true,
          "clientId": "guest",
          "keepAlive": 60,
          "lastWill": {
            "message": "Guest gone offline.",
            "qos": 2,
            "retain": false,
            "topic": "/last-wills"
          },
          "maximumPacketSize": 1024,
          "sessionExpiryInterval": 120
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "cleanSession": {
          "description": "Whether to create a persistent connection or not. When 'false', the connection will be persistent. This is called clean start in MQTTv5.",
          "type": "boolean"
        },
        "clientId": {
          "description": "The client identifier.",
          "type": "string"
        },
        "keepAlive": {
          "description": "Interval in seconds of the longest period of time the broker and the client can endure without sending a message.",
          "type": "integer"
        },
        "lastWill": {
          "description": "Last Will and Testament configuration.",
          "type": "object",
          "properties": {
            "message": {
              "description": "Last Will message.",
              "type": "string"
            },
            "qos": {
              "description": "Defines how hard the broker/client will try to ensure that the Last Will and Testament message is received. Its value MUST be either 0, 1 or 2.",
              "type": "integer",
              "enum": [ 0, 1, 2 ]
            },
            "retain": {
              "description": "Whether the broker should retain the Last Will and Testament message or not.",
              "type": "boolean"
            },
            "topic": {
              "description": "The topic where the Last Will and Testament message will be sent.",
              "type": "string"
            }
          }
        },
        "maximumPacketSize": {
          "description": "Number of bytes or a Schema Object representing the Maximum Packet Size the Client is willing to accept.",
          "oneOf": [
            {
              "type": "integer",
              "maximum": 4294967295,
              "minimum": 1
            },
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "sessionExpiryInterval": {
          "description": "Interval time in seconds or a Schema Object containing the definition of the interval.  The broker maintains a session for a disconnected client until this interval expires.",
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-nats-0.1.0-operation": {
      "title": "NATS operation bindings object",
      "description": "This object contains information about the operation representation in NATS.",
      "examples": [
        {
          "bindingVersion": "0.1.0",
          "queue": "MyCustomQueue"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.1.0" ]
        },
        "queue": {
          "description": "Defines the name of the queue to use. It MUST NOT exceed 255 characters.",
          "type": "string",
          "maxLength": 255
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-pulsar-0.1.0-channel": {
      "title": "Channel Schema",
      "description": "This object contains information about the channel representation in Pulsar, which covers namespace and topic level admin configuration. This object contains additional information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.1.0",
          "compaction": 1000,
          "deduplication": true,
          "geo-replication": [ "us-west", "us-east" ],
          "namespace": "ns1",
          "persistence": "persistent",
          "retention": {
            "size": 1000,
            "time": 15
          },
          "ttl": 360
        }
      ],
      "type": "object",
      "required": [ "namespace", "persistence" ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.1.0" ]
        },
        "compaction": {
          "description": "Topic compaction threshold given in MB",
          "type": "integer",
          "minimum": 0
        },
        "deduplication": {
          "description": "Whether deduplication of events is enabled or not.",
          "type": "boolean"
        },
        "geo-replication": {
          "description": "A list of clusters the topic is replicated to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "description": "The namespace, the channel is associated with.",
          "type": "string"
        },
        "persistence": {
          "description": "persistence of the topic in Pulsar.",
          "type": "string",
          "enum": [ "persistent", "non-persistent" ]
        },
        "retention": {
          "type": "object",
          "properties": {
            "size": {
              "description": "Size given in MegaBytes. `0` = Disable message retention.",
              "type": "integer",
              "minimum": 0
            },
            "time": {
              "description": "Time given in Minutes. `0` = Disable message retention.",
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "ttl": {
          "description": "TTL in seconds for the specified topic",
          "type": "integer"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-pulsar-0.1.0-server": {
      "title": "Server Schema",
      "description": "This object contains server information of Pulsar broker, which covers cluster and tenant admin configuration. This object contains additional information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.1.0",
          "tenant": "contoso"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.1.0" ]
        },
        "tenant": {
          "description": "The pulsar tenant. If omitted, 'public' MUST be assumed.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-sns-0.1.0-channel": {
      "title": "Channel Schema",
      "description": "This object contains information about the channel representation in SNS.",
      "examples": [
        {
          "name": "my-sns-topic",
          "policy": {
            "statements": [
              {
                "action": "SNS:Publish",
                "effect": "Allow",
                "principal": "*"
              }
            ]
          }
        }
      ],
      "type": "object",
      "required": [ "name" ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "default": "latest",
          "type": "string"
        },
        "name": {
          "description": "The name of the topic. Can be different from the channel name to allow flexibility around AWS resource naming limitations.",
          "type": "string"
        },
        "ordering": {
          "$ref": "#/definitions/bindings-sns-0.1.0-channel/definitions/ordering"
        },
        "policy": {
          "$ref": "#/definitions/bindings-sns-0.1.0-channel/definitions/policy"
        },
        "tags": {
          "description": "Key-value pairs that represent AWS tags on the topic.",
          "type": "object"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "ordering": {
          "description": "By default, we assume an unordered SNS topic. This field allows configuration of a FIFO SNS Topic.",
          "type": "object",
          "required": [ "type" ],
          "properties": {
            "type": {
              "description": "Defines the type of SNS Topic.",
              "type": "string",
              "enum": [ "standard", "FIFO" ]
            },
            "contentBasedDeduplication": {
              "description": "True to turn on de-duplication of messages for a channel.",
              "type": "boolean"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "policy": {
          "description": "The security policy for the SNS Topic.",
          "type": "object",
          "required": [ "statements" ],
          "properties": {
            "statements": {
              "description": "An array of statement objects, each of which controls a permission for this topic",
              "type": "array",
              "items": {
                "$ref": "#/definitions/bindings-sns-0.1.0-channel/definitions/statement"
              }
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "statement": {
          "type": "object",
          "required": [ "effect", "principal", "action" ],
          "properties": {
            "action": {
              "description": "The SNS permission being allowed or denied e.g. sns:Publish",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "effect": {
              "type": "string",
              "enum": [ "Allow", "Deny" ]
            },
            "principal": {
              "description": "The AWS account or resource ARN that this statement applies to.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        }
      }
    },
    "bindings-sns-0.1.0-operation": {
      "title": "Operation Schema",
      "description": "This object contains information about the operation representation in SNS.",
      "examples": [
        {
          "consumers": [
            {
              "deliveryPolicy": {
                "backoffFunction": "linear",
                "maxDelayTarget": 100,
                "maxReceivesPerSecond": 2,
                "minDelayTarget": 10,
                "numMaxDelayRetries": 5,
                "numMinDelayRetries": 3,
                "numNoDelayRetries": 2,
                "numRetries": 5
              },
              "endpoint": {
                "name": "someQueue"
              },
              "filterPolicy": {
                "customer_interests": [ "rugby", "football", "baseball" ],
                "event": [
                  {
                    "anything-but": "order_cancelled"
                  }
                ],
                "store": [ "asyncapi_corp" ]
              },
              "filterPolicyScope": "MessageAttributes",
              "protocol": "sqs",
              "rawMessageDelivery": false,
              "redrivePolicy": {
                "deadLetterQueue": {
                  "arn": "arn:aws:SQS:eu-west-1:0000000:123456789"
                },
                "maxReceiveCount": 25
              }
            }
          ],
          "topic": {
            "name": "someTopic"
          }
        }
      ],
      "type": "object",
      "required": [ "consumers" ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "default": "latest",
          "type": "string"
        },
        "consumers": {
          "description": "The protocols that listen to this topic and their endpoints.",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/bindings-sns-0.1.0-operation/definitions/consumer"
          }
        },
        "deliveryPolicy": {
          "description": "Policy for retries to HTTP. The field is the default for HTTP receivers of the SNS Topic which may be overridden by a specific consumer.",
          "$ref": "#/definitions/bindings-sns-0.1.0-operation/definitions/deliveryPolicy"
        },
        "topic": {
          "description": "Often we can assume that the SNS Topic is the channel name-we provide this field in case the you need to supply the ARN, or the Topic name is not the channel name in the AsyncAPI document.",
          "$ref": "#/definitions/bindings-sns-0.1.0-operation/definitions/identifier"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "consumer": {
          "type": "object",
          "required": [ "protocol", "endpoint", "rawMessageDelivery" ],
          "properties": {
            "deliveryPolicy": {
              "description": "Policy for retries to HTTP. The parameter is for that SNS Subscription and overrides any policy on the SNS Topic.",
              "$ref": "#/definitions/bindings-sns-0.1.0-operation/definitions/deliveryPolicy"
            },
            "displayName": {
              "description": "The display name to use with an SNS subscription",
              "type": "string"
            },
            "endpoint": {
              "description": "The endpoint messages are delivered to.",
              "$ref": "#/definitions/bindings-sns-0.1.0-operation/definitions/identifier"
            },
            "filterPolicy": {
              "description": "Only receive a subset of messages from the channel, determined by this policy. Depending on the FilterPolicyScope, a map of either a message attribute or message body to an array of possible matches. The match may be a simple string for an exact match, but it may also be an object that represents a constraint and values for that constraint.",
              "type": "object",
              "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                  "$ref": "#/definitions/specificationExtension"
                }
              },
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              }
            },
            "filterPolicyScope": {
              "description": "Determines whether the FilterPolicy applies to MessageAttributes or MessageBody.",
              "default": "MessageAttributes",
              "type": "string",
              "enum": [ "MessageAttributes", "MessageBody" ]
            },
            "protocol": {
              "description": "The protocol that this endpoint receives messages by.",
              "type": "string",
              "enum": [
                "http",
                "https",
                "email",
                "email-json",
                "sms",
                "sqs",
                "application",
                "lambda",
                "firehose"
              ]
            },
            "rawMessageDelivery": {
              "description": "If true AWS SNS attributes are removed from the body, and for SQS, SNS message attributes are copied to SQS message attributes. If false the SNS attributes are included in the body.",
              "type": "boolean"
            },
            "redrivePolicy": {
              "$ref": "#/definitions/bindings-sns-0.1.0-operation/definitions/redrivePolicy"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "deliveryPolicy": {
          "type": "object",
          "properties": {
            "backoffFunction": {
              "description": "The algorithm for backoff between retries.",
              "type": "string",
              "enum": [ "arithmetic", "exponential", "geometric", "linear" ]
            },
            "maxDelayTarget": {
              "description": "The maximum delay for a retry in seconds.",
              "type": "integer"
            },
            "maxReceivesPerSecond": {
              "description": "The maximum number of deliveries per second, per subscription.",
              "type": "integer"
            },
            "minDelayTarget": {
              "description": "The minimum delay for a retry in seconds.",
              "type": "integer"
            },
            "numMaxDelayRetries": {
              "description": "The number of post-backoff phase retries, with the maximum delay between retries.",
              "type": "integer"
            },
            "numMinDelayRetries": {
              "description": "The number of immediate retries (with delay).",
              "type": "integer"
            },
            "numNoDelayRetries": {
              "description": "The number of immediate retries (with no delay).",
              "type": "integer"
            },
            "numRetries": {
              "description": "The total number of retries, including immediate, pre-backoff, backoff, and post-backoff retries.",
              "type": "integer"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "identifier": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The target is an ARN. For example, for SQS, the identifier may be an ARN, which will be of the form: arn:aws:sqs:{region}:{account-id}:{queueName}",
              "type": "string"
            },
            "email": {
              "description": "The endpoint is an email address.",
              "type": "string"
            },
            "name": {
              "description": "The endpoint is identified by a name, which corresponds to an identifying field called 'name' of a binding for that protocol on this publish Operation Object. For example, if the protocol is 'sqs' then the name refers to the name field sqs binding. We don't use $ref because we are referring, not including.",
              "type": "string"
            },
            "phone": {
              "description": "The endpoint is a phone number.",
              "type": "string"
            },
            "url": {
              "description": "The endpoint is a URL.",
              "type": "string"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "redrivePolicy": {
          "description": "Prevent poison pill messages by moving un-processable messages to an SQS dead letter queue.",
          "type": "object",
          "required": [ "deadLetterQueue" ],
          "properties": {
            "deadLetterQueue": {
              "description": "The SQS queue to use as a dead letter queue (DLQ).",
              "$ref": "#/definitions/bindings-sns-0.1.0-operation/definitions/identifier"
            },
            "maxReceiveCount": {
              "description": "The number of times a message is delivered to the source queue before being moved to the dead-letter queue.",
              "default": 10,
              "type": "integer"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        }
      }
    },
    "bindings-solace-0.2.0-operation": {
      "title": "Solace operation bindings object",
      "description": "This object contains information about the operation representation in Solace.",
      "examples": [
        {
          "bindingVersion": "0.2.0",
          "destinations": [
            {
              "destinationType": "queue",
              "queue": {
                "accessType": "nonexclusive",
                "name": "sampleQueue",
                "topicSubscriptions": [ "samples/*" ]
              }
            },
            {
              "destinationType": "topic",
              "topicSubscriptions": [ "samples/*" ]
            }
          ]
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, \"latest\" MUST be assumed.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "destinations": {
          "description": "The list of Solace destinations referenced in the operation.",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "properties": {
                  "destinationType": {
                    "description": "If the type is queue, then the subscriber can bind to the queue. The queue subscribes to the given topicSubscriptions. If no topicSubscriptions are provied, the queue will subscribe to the topic as represented by the channel name.",
                    "type": "string",
                    "const": "queue"
                  },
                  "queue": {
                    "type": "object",
                    "properties": {
                      "accessType": {
                        "type": "string",
                        "enum": [ "exclusive", "nonexclusive" ]
                      },
                      "name": {
                        "description": "The name of the queue",
                        "type": "string"
                      },
                      "topicSubscriptions": {
                        "description": "The list of topics that the queue subscribes to.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "destinationType": {
                    "description": "If the type is topic, then the subscriber subscribes to the given topicSubscriptions. If no topicSubscriptions are provided, the client will subscribe to the topic as represented by the channel name.",
                    "type": "string",
                    "const": "topic"
                  },
                  "topicSubscriptions": {
                    "description": "The list of topics that the client subscribes to.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ],
            "properties": {
              "deliveryMode": {
                "type": "string",
                "enum": [ "direct", "persistent" ]
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "bindings-solace-0.2.0-server": {
      "title": "Solace server bindings object",
      "description": "This object contains server connection information about the Solace broker. This object contains additional connectivity information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.2.0",
          "msgVpn": "ProdVPN"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.2.0" ]
        },
        "msvVpn": {
          "description": "The name of the Virtual Private Network to connect to on the Solace broker.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-solace-0.3.0-operation": {
      "title": "Solace operation bindings object",
      "description": "This object contains information about the operation representation in Solace.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "destinations": [
            {
              "destinationType": "queue",
              "queue": {
                "accessType": "nonexclusive",
                "name": "sampleQueue",
                "topicSubscriptions": [ "samples/*" ]
              }
            },
            {
              "destinationType": "topic",
              "topicSubscriptions": [ "samples/*" ]
            }
          ]
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, \"latest\" MUST be assumed.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "destinations": {
          "description": "The list of Solace destinations referenced in the operation.",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "properties": {
                  "destinationType": {
                    "description": "If the type is queue, then the subscriber can bind to the queue. The queue subscribes to the given topicSubscriptions. If no topicSubscriptions are provied, the queue will subscribe to the topic as represented by the channel name.",
                    "type": "string",
                    "const": "queue"
                  },
                  "queue": {
                    "type": "object",
                    "properties": {
                      "accessType": {
                        "type": "string",
                        "enum": [ "exclusive", "nonexclusive" ]
                      },
                      "maxMsgSpoolUsage": {
                        "description": "The maximum amount of message spool that the given queue may use",
                        "type": "string"
                      },
                      "maxTtl": {
                        "description": "The maximum TTL to apply to messages to be spooled.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the queue",
                        "type": "string"
                      },
                      "topicSubscriptions": {
                        "description": "The list of topics that the queue subscribes to.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "destinationType": {
                    "description": "If the type is topic, then the subscriber subscribes to the given topicSubscriptions. If no topicSubscriptions are provided, the client will subscribe to the topic as represented by the channel name.",
                    "type": "string",
                    "const": "topic"
                  },
                  "topicSubscriptions": {
                    "description": "The list of topics that the client subscribes to.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ],
            "properties": {
              "deliveryMode": {
                "type": "string",
                "enum": [ "direct", "persistent" ]
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "bindings-solace-0.3.0-server": {
      "title": "Solace server bindings object",
      "description": "This object contains server connection information about the Solace broker. This object contains additional connectivity information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.3.0",
          "msgVpn": "ProdVPN"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.3.0" ]
        },
        "msgVpn": {
          "description": "The name of the Virtual Private Network to connect to on the Solace broker.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-solace-0.4.0-operation": {
      "title": "Solace operation bindings object",
      "description": "This object contains information about the operation representation in Solace.",
      "examples": [
        {
          "bindingVersion": "0.4.0",
          "destinations": [
            {
              "destinationType": "queue",
              "queue": {
                "accessType": "nonexclusive",
                "name": "sampleQueue",
                "topicSubscriptions": [ "samples/*" ]
              }
            },
            {
              "destinationType": "topic",
              "topicSubscriptions": [ "samples/*" ]
            }
          ]
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, \"latest\" MUST be assumed.",
          "type": "string",
          "enum": [ "0.4.0" ]
        },
        "destinations": {
          "description": "The list of Solace destinations referenced in the operation.",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "properties": {
                  "destinationType": {
                    "description": "If the type is queue, then the subscriber can bind to the queue. The queue subscribes to the given topicSubscriptions. If no topicSubscriptions are provied, the queue will subscribe to the topic as represented by the channel name.",
                    "type": "string",
                    "const": "queue"
                  },
                  "queue": {
                    "type": "object",
                    "properties": {
                      "accessType": {
                        "type": "string",
                        "enum": [ "exclusive", "nonexclusive" ]
                      },
                      "maxMsgSpoolUsage": {
                        "description": "The maximum amount of message spool that the given queue may use",
                        "type": "string"
                      },
                      "maxTtl": {
                        "description": "The maximum TTL to apply to messages to be spooled.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the queue",
                        "type": "string"
                      },
                      "topicSubscriptions": {
                        "description": "The list of topics that the queue subscribes to.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "destinationType": {
                    "description": "If the type is topic, then the subscriber subscribes to the given topicSubscriptions. If no topicSubscriptions are provided, the client will subscribe to the topic as represented by the channel name.",
                    "type": "string",
                    "const": "topic"
                  },
                  "topicSubscriptions": {
                    "description": "The list of topics that the client subscribes to.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ],
            "properties": {
              "deliveryMode": {
                "type": "string",
                "enum": [ "direct", "persistent" ]
              }
            }
          }
        },
        "dmqEligible": {
          "description": "Set the message to be eligible to be moved to a Dead Message Queue. The default value is false.",
          "type": "boolean"
        },
        "priority": {
          "description": "The valid priority value range is 0-255 with 0 as the lowest priority and 255 as the highest or a Schema Object containing the definition of the priority.",
          "type": "integer",
          "maximum": 255,
          "minimum": 0
        },
        "timeToLive": {
          "description": "Interval in milliseconds or a Schema Object containing the definition of the lifetime of the message.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "bindings-solace-0.4.0-server": {
      "title": "Solace server bindings object",
      "description": "This object contains server connection information about the Solace broker. This object contains additional connectivity information not possible to represent within the core AsyncAPI specification.",
      "examples": [
        {
          "bindingVersion": "0.4.0",
          "msgVpn": "ProdVPN"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding.",
          "type": "string",
          "enum": [ "0.4.0" ]
        },
        "clientName": {
          "description": "A unique client name to use to register to the appliance. If specified, it must be a valid Topic name, and a maximum of 160 bytes in length when encoded as UTF-8.",
          "type": "string",
          "maxLength": 160,
          "minLength": 1
        },
        "msgVpn": {
          "description": "The name of the Virtual Private Network to connect to on the Solace broker.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "bindings-sqs-0.2.0-channel": {
      "title": "Channel Schema",
      "description": "This object contains information about the channel representation in SQS.",
      "examples": [
        {
          "deadLetterQueue": {
            "deliveryDelay": 0,
            "messageRetentionPeriod": 604800,
            "name": "myQueue_error",
            "receiveMessageWaitTime": 0,
            "visibilityTimeout": 0
          },
          "queue": {
            "deduplicationScope": "messageGroup",
            "deliveryDelay": 15,
            "fifoQueue": true,
            "fifoThroughputLimit": "perMessageGroupId",
            "messageRetentionPeriod": 86400,
            "name": "myQueue",
            "policy": {
              "statements": [
                {
                  "action": [ "sqs:SendMessage", "sqs:ReceiveMessage" ],
                  "effect": "Deny",
                  "principal": "arn:aws:iam::123456789012:user/dec.kolakowski"
                }
              ]
            },
            "receiveMessageWaitTime": 0,
            "redrivePolicy": {
              "deadLetterQueue": {
                "arn": "arn:aws:SQS:eu-west-1:0000000:123456789"
              },
              "maxReceiveCount": 15
            },
            "tags": {
              "owner": "AsyncAPI.NET",
              "platform": "AsyncAPIOrg"
            },
            "visibilityTimeout": 60
          }
        }
      ],
      "type": "object",
      "required": [ "queue" ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "default": "latest",
          "type": "string",
          "enum": [ "0.1.0", "0.2.0" ]
        },
        "deadLetterQueue": {
          "description": "A definition of the queue that will be used for un-processable messages.",
          "$ref": "#/definitions/bindings-sqs-0.2.0-channel/definitions/queue"
        },
        "queue": {
          "description": "A definition of the queue that will be used as the channel.",
          "$ref": "#/definitions/bindings-sqs-0.2.0-channel/definitions/queue"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "identifier": {
          "description": "The SQS queue to use as a dead letter queue (DLQ).",
          "type": "object",
          "properties": {
            "arn": {
              "description": "The target is an ARN. For example, for SQS, the identifier may be an ARN, which will be of the form: arn:aws:sqs:{region}:{account-id}:{queueName}",
              "type": "string"
            },
            "name": {
              "description": "The endpoint is identified by a name, which corresponds to an identifying field called 'name' of a binding for that protocol on this publish Operation Object. For example, if the protocol is 'sqs' then the name refers to the name field sqs binding.",
              "type": "string"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "policy": {
          "description": "The security policy for the SQS Queue",
          "type": "object",
          "required": [ "statements" ],
          "properties": {
            "statements": {
              "description": "An array of statement objects, each of which controls a permission for this queue.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/bindings-sqs-0.2.0-channel/definitions/statement"
              }
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "queue": {
          "description": "A definition of a queue.",
          "type": "object",
          "required": [ "name", "fifoQueue" ],
          "properties": {
            "deduplicationScope": {
              "description": "Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue (default).",
              "default": "queue",
              "type": "string",
              "enum": [ "queue", "messageGroup" ]
            },
            "deliveryDelay": {
              "description": "The number of seconds to delay before a message sent to the queue can be received. used to create a delay queue.",
              "default": 0,
              "type": "integer",
              "maximum": 15,
              "minimum": 0
            },
            "fifoQueue": {
              "description": "Is this a FIFO queue?",
              "default": false,
              "type": "boolean"
            },
            "fifoThroughputLimit": {
              "description": "Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue (default) and perMessageGroupId.",
              "default": "perQueue",
              "type": "string",
              "enum": [ "perQueue", "perMessageGroupId" ]
            },
            "messageRetentionPeriod": {
              "description": "How long to retain a message on the queue in seconds, unless deleted.",
              "default": 345600,
              "type": "integer",
              "maximum": 1209600,
              "minimum": 60
            },
            "name": {
              "description": "The name of the queue. When an SNS Operation Binding Object references an SQS queue by name, the identifier should be the one in this field.",
              "type": "string"
            },
            "policy": {
              "$ref": "#/definitions/bindings-sqs-0.2.0-channel/definitions/policy"
            },
            "receiveMessageWaitTime": {
              "description": "Determines if the queue uses short polling or long polling. Set to zero the queue reads available messages and returns immediately. Set to a non-zero integer, long polling waits the specified number of seconds for messages to arrive before returning.",
              "default": 0,
              "type": "integer"
            },
            "redrivePolicy": {
              "$ref": "#/definitions/bindings-sqs-0.2.0-channel/definitions/redrivePolicy"
            },
            "tags": {
              "description": "Key-value pairs that represent AWS tags on the queue.",
              "type": "object"
            },
            "visibilityTimeout": {
              "description": "The length of time, in seconds, that a consumer locks a message - hiding it from reads - before it is unlocked and can be read again.",
              "default": 30,
              "type": "integer",
              "maximum": 43200,
              "minimum": 0
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "redrivePolicy": {
          "description": "Prevent poison pill messages by moving un-processable messages to an SQS dead letter queue.",
          "type": "object",
          "required": [ "deadLetterQueue" ],
          "properties": {
            "deadLetterQueue": {
              "$ref": "#/definitions/bindings-sqs-0.2.0-channel/definitions/identifier"
            },
            "maxReceiveCount": {
              "description": "The number of times a message is delivered to the source queue before being moved to the dead-letter queue.",
              "default": 10,
              "type": "integer"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "statement": {
          "type": "object",
          "required": [ "effect", "principal", "action" ],
          "properties": {
            "action": {
              "description": "The SQS permission being allowed or denied e.g. sqs:ReceiveMessage",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "effect": {
              "type": "string",
              "enum": [ "Allow", "Deny" ]
            },
            "principal": {
              "description": "The AWS account or resource ARN that this statement applies to.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        }
      }
    },
    "bindings-sqs-0.2.0-operation": {
      "title": "Operation Schema",
      "description": "This object contains information about the operation representation in SQS.",
      "examples": [
        {
          "queues": [
            {
              "deduplicationScope": "messageGroup",
              "deliveryDelay": 10,
              "fifoQueue": true,
              "fifoThroughputLimit": "perMessageGroupId",
              "name": "myQueue",
              "policy": {
                "statements": [
                  {
                    "action": [ "sqs:SendMessage", "sqs:ReceiveMessage" ],
                    "effect": "Deny",
                    "principal": "arn:aws:iam::123456789012:user/dec.kolakowski"
                  }
                ]
              },
              "redrivePolicy": {
                "deadLetterQueue": {
                  "name": "myQueue_error"
                },
                "maxReceiveCount": 15
              }
            },
            {
              "deliveryDelay": 10,
              "name": "myQueue_error"
            }
          ]
        }
      ],
      "type": "object",
      "required": [ "queues" ],
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "default": "latest",
          "type": "string",
          "enum": [ "0.1.0", "0.2.0" ]
        },
        "queues": {
          "description": "Queue objects that are either the endpoint for an SNS Operation Binding Object, or the deadLetterQueue of the SQS Operation Binding Object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bindings-sqs-0.2.0-operation/definitions/queue"
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "identifier": {
          "description": "The SQS queue to use as a dead letter queue (DLQ).",
          "type": "object",
          "properties": {
            "arn": {
              "description": "The target is an ARN. For example, for SQS, the identifier may be an ARN, which will be of the form: arn:aws:sqs:{region}:{account-id}:{queueName}",
              "type": "string"
            },
            "name": {
              "description": "The endpoint is identified by a name, which corresponds to an identifying field called 'name' of a binding for that protocol on this publish Operation Object. For example, if the protocol is 'sqs' then the name refers to the name field sqs binding.",
              "type": "string"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "policy": {
          "description": "The security policy for the SQS Queue",
          "type": "object",
          "required": [ "statements" ],
          "properties": {
            "statements": {
              "description": "An array of statement objects, each of which controls a permission for this queue.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/bindings-sqs-0.2.0-operation/definitions/statement"
              }
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "queue": {
          "description": "A definition of a queue.",
          "type": "object",
          "required": [ "name" ],
          "properties": {
            "$ref": {
              "description": "Allows for an external definition of a queue. The referenced structure MUST be in the format of a Queue. If there are conflicts between the referenced definition and this Queue's definition, the behavior is undefined.",
              "type": "string"
            },
            "deduplicationScope": {
              "description": "Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue (default).",
              "default": "queue",
              "type": "string",
              "enum": [ "queue", "messageGroup" ]
            },
            "deliveryDelay": {
              "description": "The number of seconds to delay before a message sent to the queue can be received. Used to create a delay queue.",
              "default": 0,
              "type": "integer",
              "maximum": 15,
              "minimum": 0
            },
            "fifoQueue": {
              "description": "Is this a FIFO queue?",
              "default": false,
              "type": "boolean"
            },
            "fifoThroughputLimit": {
              "description": "Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue (default) and perMessageGroupId.",
              "default": "perQueue",
              "type": "string",
              "enum": [ "perQueue", "perMessageGroupId" ]
            },
            "messageRetentionPeriod": {
              "description": "How long to retain a message on the queue in seconds, unless deleted.",
              "default": 345600,
              "type": "integer",
              "maximum": 1209600,
              "minimum": 60
            },
            "name": {
              "description": "The name of the queue. When an SNS Operation Binding Object references an SQS queue by name, the identifier should be the one in this field.",
              "type": "string"
            },
            "policy": {
              "$ref": "#/definitions/bindings-sqs-0.2.0-operation/definitions/policy"
            },
            "receiveMessageWaitTime": {
              "description": "Determines if the queue uses short polling or long polling. Set to zero the queue reads available messages and returns immediately. Set to a non-zero integer, long polling waits the specified number of seconds for messages to arrive before returning.",
              "default": 0,
              "type": "integer"
            },
            "redrivePolicy": {
              "$ref": "#/definitions/bindings-sqs-0.2.0-operation/definitions/redrivePolicy"
            },
            "tags": {
              "description": "Key-value pairs that represent AWS tags on the queue.",
              "type": "object"
            },
            "visibilityTimeout": {
              "description": "The length of time, in seconds, that a consumer locks a message - hiding it from reads - before it is unlocked and can be read again.",
              "default": 30,
              "type": "integer",
              "maximum": 43200,
              "minimum": 0
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "redrivePolicy": {
          "description": "Prevent poison pill messages by moving un-processable messages to an SQS dead letter queue.",
          "type": "object",
          "required": [ "deadLetterQueue" ],
          "properties": {
            "deadLetterQueue": {
              "$ref": "#/definitions/bindings-sqs-0.2.0-operation/definitions/identifier"
            },
            "maxReceiveCount": {
              "description": "The number of times a message is delivered to the source queue before being moved to the dead-letter queue.",
              "default": 10,
              "type": "integer"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        },
        "statement": {
          "type": "object",
          "required": [ "effect", "principal", "action" ],
          "properties": {
            "action": {
              "description": "The SQS permission being allowed or denied e.g. sqs:ReceiveMessage",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "effect": {
              "type": "string",
              "enum": [ "Allow", "Deny" ]
            },
            "principal": {
              "description": "The AWS account or resource ARN that this statement applies to.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        }
      }
    },
    "bindings-websockets-0.1.0-channel": {
      "title": "WebSockets channel bindings object",
      "description": "When using WebSockets, the channel represents the connection. Unlike other protocols that support multiple virtual channels (topics, routing keys, etc.) per connection, WebSockets doesn't support virtual channels or, put it another way, there's only one channel and its characteristics are strongly related to the protocol used for the handshake, i.e., HTTP.",
      "examples": [
        {
          "bindingVersion": "0.1.0",
          "method": "POST"
        }
      ],
      "type": "object",
      "properties": {
        "bindingVersion": {
          "description": "The version of this binding. If omitted, 'latest' MUST be assumed.",
          "type": "string",
          "enum": [ "0.1.0" ]
        },
        "headers": {
          "description": "A Schema object containing the definitions of the HTTP headers to use when establishing the connection. This schema MUST be of type 'object' and have a 'properties' key.",
          "oneOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "method": {
          "description": "The HTTP method to use when establishing the connection. Its value MUST be either 'GET' or 'POST'.",
          "type": "string",
          "enum": [ "GET", "POST" ]
        },
        "query": {
          "description": "A Schema object containing the definitions for each query parameter. This schema MUST be of type 'object' and have a 'properties' key.",
          "oneOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "channel": {
      "description": "Describes a shared communication channel.",
      "examples": [
        {
          "title": "Users channel",
          "description": "This channel is used to exchange messages about user events.",
          "address": "users.{userId}",
          "bindings": {
            "amqp": {
              "is": "queue",
              "queue": {
                "exclusive": true
              }
            }
          },
          "externalDocs": {
            "description": "Find more info here",
            "url": "https://example.com"
          },
          "messages": {
            "userCompletedOrder": {
              "$ref": "#/components/messages/userCompletedOrder"
            },
            "userSignedUp": {
              "$ref": "#/components/messages/userSignedUp"
            }
          },
          "parameters": {
            "userId": {
              "$ref": "#/components/parameters/userId"
            }
          },
          "servers": [
            {
              "$ref": "#/servers/rabbitmqInProd"
            },
            {
              "$ref": "#/servers/rabbitmqInStaging"
            }
          ],
          "tags": [
            {
              "description": "User-related messages",
              "name": "user"
            }
          ]
        }
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "A human-friendly title for the channel.",
          "type": "string"
        },
        "description": {
          "description": "A longer description of the channel. CommonMark is allowed.",
          "type": "string"
        },
        "address": {
          "description": "An optional string representation of this channel's address. The address is typically the \"topic name\", \"routing key\", \"event type\", or \"path\". When `null` or absent, it MUST be interpreted as unknown. This is useful when the address is generated dynamically at runtime or can't be known upfront. It MAY contain Channel Address Expressions.",
          "type": [ "string", "null" ]
        },
        "bindings": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/channelBindingsObject"
          }
        },
        "externalDocs": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/externalDocs"
          }
        },
        "messages": {
          "$ref": "#/definitions/channelMessages"
        },
        "parameters": {
          "$ref": "#/definitions/parameters"
        },
        "servers": {
          "description": "The references of the servers on which this channel is available. If absent or empty then this channel must be available on all servers.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "summary": {
          "description": "A brief summary of the channel.",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags for logical grouping of channels.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "if": {
              "required": [ "$ref" ]
            },
            "then": {
              "$ref": "#/definitions/Reference"
            },
            "else": {
              "$ref": "#/definitions/tag"
            }
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "channelBindingsObject": {
      "description": "Map describing protocol-specific definitions for a channel.",
      "type": "object",
      "properties": {
        "amqp": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-amqp-0.3.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-amqp-0.3.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.3.0" ]
            }
          }
        },
        "amqp1": {},
        "anypointmq": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-anypointmq-0.0.1-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.0.1"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-anypointmq-0.0.1-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.0.1" ]
            }
          }
        },
        "googlepubsub": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0" ]
            }
          }
        },
        "http": {},
        "ibmmq": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-ibmmq-0.1.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-ibmmq-0.1.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "jms": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-jms-0.0.1-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.0.1"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-jms-0.0.1-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.0.1" ]
            }
          }
        },
        "kafka": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.5.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.4.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.4.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.3.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.5.0", "0.4.0", "0.3.0" ]
            }
          }
        },
        "mqtt": {},
        "nats": {},
        "pulsar": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-pulsar-0.1.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-pulsar-0.1.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "redis": {},
        "sns": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sns-0.1.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sns-0.1.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "solace": {},
        "sqs": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sqs-0.2.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sqs-0.2.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0" ]
            }
          }
        },
        "stomp": {},
        "ws": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-websockets-0.1.0-channel"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-websockets-0.1.0-channel"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "channelMessages": {
      "description": "A map of the messages that will be sent to this channel by any application at any time. **Every message sent to this channel MUST be valid against one, and only one, of the message objects defined in this map.**",
      "type": "object",
      "additionalProperties": {
        "if": {
          "required": [ "$ref" ]
        },
        "then": {
          "$ref": "#/definitions/Reference"
        },
        "else": {
          "$ref": "#/definitions/messageObject"
        }
      }
    },
    "channels": {
      "description": "An object containing all the Channel Object definitions the Application MUST use during runtime.",
      "examples": [
        {
          "userSignedUp": {
            "address": "user.signedup",
            "messages": {
              "userSignedUp": {
                "$ref": "#/components/messages/userSignedUp"
              }
            }
          }
        }
      ],
      "type": "object",
      "additionalProperties": {
        "if": {
          "required": [ "$ref" ]
        },
        "then": {
          "$ref": "#/definitions/Reference"
        },
        "else": {
          "$ref": "#/definitions/channel"
        }
      }
    },
    "components": {
      "description": "An object to hold a set of reusable objects for different aspects of the AsyncAPI specification. All objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.",
      "examples": [
        {
          "components": {
            "channels": {
              "user/signedup": {
                "subscribe": {
                  "message": {
                    "$ref": "#/components/messages/userSignUp"
                  }
                }
              }
            },
            "correlationIds": {
              "default": {
                "description": "Default Correlation ID",
                "location": "$message.header#/correlationId"
              }
            },
            "messageTraits": {
              "commonHeaders": {
                "headers": {
                  "type": "object",
                  "properties": {
                    "my-app-header": {
                      "type": "integer",
                      "maximum": 100,
                      "minimum": 0
                    }
                  }
                }
              }
            },
            "messages": {
              "userSignUp": {
                "description": "Multiline description of what this action does.\nHere you have another line.\n",
                "headers": {
                  "type": "object",
                  "properties": {
                    "applicationInstanceId": {
                      "description": "Unique identifier for a given instance of the publishing application",
                      "type": "string"
                    }
                  }
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "signup": {
                      "$ref": "#/components/schemas/signup"
                    },
                    "user": {
                      "$ref": "#/components/schemas/userCreate"
                    }
                  }
                },
                "summary": "Action to sign a user up.",
                "tags": [
                  {
                    "name": "user"
                  },
                  {
                    "name": "signup"
                  }
                ]
              }
            },
            "parameters": {
              "userId": {
                "description": "Id of the user."
              }
            },
            "schemas": {
              "AvroExample": {
                "schema": {
                  "$ref": "path/to/user-create.avsc#/UserCreate"
                },
                "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0"
              },
              "Category": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "Tag": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "serverVariables": {
              "port": {
                "default": "5672",
                "enum": [ "5671", "5672" ]
              },
              "stage": {
                "description": "This value is assigned by the service provider, in this example `mycompany.com`",
                "default": "demo"
              }
            },
            "servers": {
              "development": {
                "description": "RabbitMQ broker",
                "host": "{stage}.in.mycompany.com:{port}",
                "protocol": "amqp",
                "protocolVersion": "0-9-1",
                "variables": {
                  "port": {
                    "$ref": "#/components/serverVariables/port"
                  },
                  "stage": {
                    "$ref": "#/components/serverVariables/stage"
                  }
                }
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "channelBindings": {
          "description": "An object to hold reusable Channel Bindings Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/channelBindingsObject"
              }
            }
          }
        },
        "channels": {
          "description": "An object to hold reusable Channel Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/channel"
              }
            }
          }
        },
        "correlationIds": {
          "description": "An object to hold reusable Correlation ID Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/correlationId"
              }
            }
          }
        },
        "externalDocs": {
          "description": "An object to hold reusable External Documentation Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/externalDocs"
              }
            }
          }
        },
        "messageBindings": {
          "description": "An object to hold reusable Message Bindings Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/messageBindingsObject"
              }
            }
          }
        },
        "messageTraits": {
          "description": "An object to hold reusable Message Trait Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/messageTrait"
              }
            }
          }
        },
        "messages": {
          "description": "An object to hold reusable Message Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/messageObject"
              }
            }
          }
        },
        "operationBindings": {
          "description": "An object to hold reusable Operation Bindings Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/operationBindingsObject"
              }
            }
          }
        },
        "operationTraits": {
          "description": "An object to hold reusable Operation Trait Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/operationTrait"
              }
            }
          }
        },
        "operations": {
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/operation"
              }
            }
          }
        },
        "parameters": {
          "description": "An object to hold reusable Parameter Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/parameter"
              }
            }
          }
        },
        "replies": {
          "description": "An object to hold reusable Operation Reply Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/operationReply"
              }
            }
          }
        },
        "replyAddresses": {
          "description": "An object to hold reusable Operation Reply Address Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/operationReplyAddress"
              }
            }
          }
        },
        "schemas": {
          "description": "An object to hold reusable Schema Object. If this is a Schema Object, then the schemaFormat will be assumed to be 'application/vnd.aai.asyncapi+json;version=asyncapi' where the version is equal to the AsyncAPI Version String.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "$ref": "#/definitions/anySchema"
            }
          }
        },
        "securitySchemes": {
          "description": "An object to hold reusable Security Scheme Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/SecurityScheme"
              }
            }
          }
        },
        "serverBindings": {
          "description": "An object to hold reusable Server Bindings Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/serverBindingsObject"
              }
            }
          }
        },
        "serverVariables": {
          "description": "An object to hold reusable Server Variable Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/serverVariable"
              }
            }
          }
        },
        "servers": {
          "description": "An object to hold reusable Server Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/server"
              }
            }
          }
        },
        "tags": {
          "description": "An object to hold reusable Tag Objects.",
          "type": "object",
          "patternProperties": {
            "^[\\w\\d\\.\\-_]+$": {
              "if": {
                "required": [ "$ref" ]
              },
              "then": {
                "$ref": "#/definitions/Reference"
              },
              "else": {
                "$ref": "#/definitions/tag"
              }
            }
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "contact": {
      "description": "Contact information for the exposed API.",
      "examples": [
        {
          "email": "support@example.com",
          "name": "API Support",
          "url": "https://www.example.com/support"
        }
      ],
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address of the contact person/organization.",
          "type": "string",
          "format": "email"
        },
        "name": {
          "description": "The identifying name of the contact person/organization.",
          "type": "string"
        },
        "url": {
          "description": "The URL pointing to the contact information.",
          "type": "string",
          "format": "uri"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "correlationId": {
      "description": "An object that specifies an identifier at design time that can used for message tracing and correlation.",
      "examples": [
        {
          "description": "Default Correlation ID",
          "location": "$message.header#/correlationId"
        }
      ],
      "type": "object",
      "required": [ "location" ],
      "properties": {
        "description": {
          "description": "A optional description of the correlation ID. GitHub Flavored Markdown is allowed.",
          "type": "string"
        },
        "location": {
          "description": "A runtime expression that specifies the location of the correlation ID",
          "type": "string",
          "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "extensions-linkedin-0.1.0-schema": {
      "description": "This extension allows you to provide the Linkedin profile URL of the account representing the team/company of the API.",
      "type": "string",
      "pattern": "^http(s)?://(www\\.)?linkedin\\.com.*$",
      "example": [
        "https://www.linkedin.com/company/asyncapi/",
        "https://www.linkedin.com/in/sambhavgupta0705/"
      ]
    },
    "extensions-x-0.1.0-schema": {
      "description": "This extension allows you to provide the Twitter username of the account representing the team/company of the API.",
      "type": "string",
      "example": [ "sambhavgupta75", "AsyncAPISpec" ]
    },
    "externalDocs": {
      "description": "Allows referencing an external resource for extended documentation.",
      "examples": [
        {
          "description": "Find more info here",
          "url": "https://example.com"
        }
      ],
      "type": "object",
      "required": [ "url" ],
      "properties": {
        "description": {
          "description": "A short description of the target documentation. CommonMark syntax can be used for rich text representation.",
          "type": "string"
        },
        "url": {
          "description": "The URL for the target documentation. This MUST be in the form of an absolute URL.",
          "type": "string",
          "format": "uri"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "info": {
      "description": "The object provides metadata about the API. The metadata can be used by the clients if needed.",
      "examples": [
        {
          "title": "AsyncAPI Sample App",
          "description": "This is a sample app.",
          "contact": {
            "email": "support@asyncapi.org",
            "name": "API Support",
            "url": "https://www.asyncapi.org/support"
          },
          "externalDocs": {
            "description": "Find more info here",
            "url": "https://www.asyncapi.org"
          },
          "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
          },
          "tags": [
            {
              "name": "e-commerce"
            }
          ],
          "termsOfService": "https://asyncapi.org/terms/",
          "version": "1.0.1"
        }
      ],
      "allOf": [
        {
          "type": "object",
          "required": [ "version", "title" ],
          "properties": {
            "title": {
              "description": "A unique and precise title of the API.",
              "type": "string"
            },
            "description": {
              "description": "A longer description of the API. Should be different from the title. CommonMark is allowed.",
              "type": "string"
            },
            "contact": {
              "$ref": "#/definitions/contact"
            },
            "externalDocs": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/externalDocs"
                }
              ]
            },
            "license": {
              "$ref": "#/definitions/license"
            },
            "tags": {
              "description": "A list of tags for application API documentation control. Tags can be used for logical grouping of applications.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/Reference"
                  },
                  {
                    "$ref": "#/definitions/tag"
                  }
                ]
              }
            },
            "termsOfService": {
              "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL.",
              "type": "string",
              "format": "uri"
            },
            "version": {
              "description": "A semantic version number of the API.",
              "type": "string"
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "#/definitions/infoExtensions"
        }
      ]
    },
    "infoExtensions": {
      "description": "The object that lists all the extensions of Info",
      "type": "object",
      "properties": {
        "x-linkedin": {
          "$ref": "#/definitions/extensions-linkedin-0.1.0-schema"
        },
        "x-x": {
          "$ref": "#/definitions/extensions-x-0.1.0-schema"
        }
      }
    },
    "json-schema-draft-07-schema": {
      "title": "Core schema meta-schema",
      "default": true,
      "type": [ "object", "boolean" ],
      "properties": {
        "$schema": {
          "type": "string",
          "format": "uri"
        },
        "$id": {
          "type": "string",
          "format": "uri-reference"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "$comment": {
          "type": "string"
        },
        "examples": {
          "type": "array",
          "items": true
        },
        "readOnly": {
          "default": false,
          "type": "boolean"
        },
        "writeOnly": {
          "default": false,
          "type": "boolean"
        },
        "default": true,
        "$ref": {
          "type": "string",
          "format": "uri-reference"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/json-schema-draft-07-schema/definitions/simpleTypes"
            },
            {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "$ref": "#/definitions/json-schema-draft-07-schema/definitions/simpleTypes"
              }
            }
          ]
        },
        "const": true,
        "enum": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": true
        },
        "allOf": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
        },
        "anyOf": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
        },
        "oneOf": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
        },
        "not": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "if": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "then": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "else": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "exclusiveMaximum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "number"
        },
        "minimum": {
          "type": "number"
        },
        "multipleOf": {
          "type": "number",
          "exclusiveMinimum": 0
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "format": {
          "type": "string"
        },
        "maxLength": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
        },
        "minLength": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
        },
        "contentEncoding": {
          "type": "string"
        },
        "contentMediaType": {
          "type": "string"
        },
        "maxItems": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
        },
        "minItems": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
        },
        "uniqueItems": {
          "default": false,
          "type": "boolean"
        },
        "contains": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "items": {
          "default": true,
          "anyOf": [
            {
              "$ref": "#/definitions/json-schema-draft-07-schema"
            },
            {
              "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
            }
          ]
        },
        "additionalItems": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "required": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/stringArray"
        },
        "maxProperties": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
        },
        "minProperties": {
          "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
        },
        "propertyNames": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "properties": {
          "default": {},
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/json-schema-draft-07-schema"
          }
        },
        "patternProperties": {
          "default": {},
          "type": "object",
          "propertyNames": {
            "format": "regex"
          },
          "additionalProperties": {
            "$ref": "#/definitions/json-schema-draft-07-schema"
          }
        },
        "additionalProperties": {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/json-schema-draft-07-schema"
              },
              {
                "$ref": "#/definitions/json-schema-draft-07-schema/definitions/stringArray"
              }
            ]
          }
        },
        "definitions": {
          "default": {},
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/json-schema-draft-07-schema"
          }
        }
      },
      "definitions": {
        "nonNegativeInteger": {
          "type": "integer",
          "minimum": 0
        },
        "nonNegativeIntegerDefault0": {
          "allOf": [
            {
              "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
            },
            {
              "default": 0
            }
          ]
        },
        "schemaArray": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/json-schema-draft-07-schema"
          }
        },
        "simpleTypes": {
          "enum": [
            "array",
            "boolean",
            "integer",
            "null",
            "number",
            "object",
            "string"
          ]
        },
        "stringArray": {
          "default": [],
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "license": {
      "examples": [
        {
          "name": "Apache 2.0",
          "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
      ],
      "type": "object",
      "required": [ "name" ],
      "properties": {
        "name": {
          "description": "The name of the license type. It's encouraged to use an OSI compatible license.",
          "type": "string"
        },
        "url": {
          "description": "The URL pointing to the license.",
          "type": "string",
          "format": "uri"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "messageBindingsObject": {
      "description": "Map describing protocol-specific definitions for a message.",
      "type": "object",
      "properties": {
        "amqp": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-amqp-0.3.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-amqp-0.3.0-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.3.0" ]
            }
          }
        },
        "amqp1": {},
        "anypointmq": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-anypointmq-0.0.1-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.0.1"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-anypointmq-0.0.1-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.0.1" ]
            }
          }
        },
        "googlepubsub": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0" ]
            }
          }
        },
        "http": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-http-0.3.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-http-0.2.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-http-0.3.0-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0", "0.3.0" ]
            }
          }
        },
        "ibmmq": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-ibmmq-0.1.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-ibmmq-0.1.0-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "jms": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-jms-0.0.1-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.0.1"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-jms-0.0.1-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.0.1" ]
            }
          }
        },
        "kafka": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.5.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.4.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.4.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.3.0-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.5.0", "0.4.0", "0.3.0" ]
            }
          }
        },
        "mqtt": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-mqtt-0.2.0-message"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-mqtt-0.2.0-message"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0" ]
            }
          }
        },
        "nats": {},
        "redis": {},
        "sns": {},
        "solace": {},
        "sqs": {},
        "stomp": {},
        "ws": {}
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "messageExampleObject": {
      "type": "object",
      "anyOf": [
        {
          "required": [ "payload" ]
        },
        {
          "required": [ "headers" ]
        }
      ],
      "properties": {
        "headers": {
          "description": "Example of the application headers. It can be of any type.",
          "type": "object"
        },
        "name": {
          "description": "Machine readable name of the message example.",
          "type": "string"
        },
        "payload": {
          "description": "Example of the message payload. It can be of any type."
        },
        "summary": {
          "description": "A brief summary of the message example.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "messageObject": {
      "description": "Describes a message received on a given channel and operation.",
      "examples": [
        {
          "title": "User signup",
          "description": "A longer description",
          "examples": [
            {
              "headers": {
                "applicationInstanceId": "myInstanceId",
                "correlationId": "my-correlation-id"
              },
              "name": "SimpleSignup",
              "payload": {
                "signup": {
                  "someSignupKey": "someSignupValue"
                },
                "user": {
                  "someUserKey": "someUserValue"
                }
              },
              "summary": "A simple UserSignup example message"
            }
          ],
          "contentType": "application/json",
          "correlationId": {
            "description": "Default Correlation ID",
            "location": "$message.header#/correlationId"
          },
          "headers": {
            "type": "object",
            "properties": {
              "applicationInstanceId": {
                "description": "Unique identifier for a given instance of the publishing application",
                "type": "string"
              },
              "correlationId": {
                "description": "Correlation ID set by application",
                "type": "string"
              }
            }
          },
          "messageId": "userSignup",
          "name": "UserSignup",
          "payload": {
            "type": "object",
            "properties": {
              "signup": {
                "$ref": "#/components/schemas/signup"
              },
              "user": {
                "$ref": "#/components/schemas/userCreate"
              }
            }
          },
          "summary": "Action to sign a user up.",
          "tags": [
            {
              "name": "user"
            },
            {
              "name": "signup"
            },
            {
              "name": "register"
            }
          ],
          "traits": [
            {
              "$ref": "#/components/messageTraits/commonHeaders"
            }
          ]
        }
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "A human-friendly title for the message.",
          "type": "string"
        },
        "description": {
          "description": "A longer description of the message. CommonMark is allowed.",
          "type": "string"
        },
        "examples": {
          "description": "List of examples.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messageExampleObject"
          }
        },
        "deprecated": {
          "default": false,
          "type": "boolean"
        },
        "bindings": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/messageBindingsObject"
          }
        },
        "contentType": {
          "description": "The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. application/json). When omitted, the value MUST be the one specified on the defaultContentType field.",
          "type": "string"
        },
        "correlationId": {
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/correlationId"
            }
          ]
        },
        "externalDocs": {
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/externalDocs"
            }
          ]
        },
        "headers": {
          "$ref": "#/definitions/anySchema"
        },
        "name": {
          "description": "Name of the message.",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/anySchema"
        },
        "summary": {
          "description": "A brief summary of the message.",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Reference"
              },
              {
                "$ref": "#/definitions/tag"
              }
            ]
          }
        },
        "traits": {
          "description": "A list of traits to apply to the message object. Traits MUST be merged using traits merge mechanism. The resulting object MUST be a valid Message Object.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Reference"
              },
              {
                "$ref": "#/definitions/messageTrait"
              },
              {
                "type": "array",
                "items": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Reference"
                      },
                      {
                        "$ref": "#/definitions/messageTrait"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "additionalItems": true
                  }
                ]
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "messageTrait": {
      "description": "Describes a trait that MAY be applied to a Message Object. This object MAY contain any property from the Message Object, except payload and traits.",
      "examples": [
        {
          "contentType": "application/json"
        }
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "A human-friendly title for the message.",
          "type": "string"
        },
        "description": {
          "description": "A longer description of the message. CommonMark is allowed.",
          "type": "string"
        },
        "examples": {
          "description": "List of examples.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messageExampleObject"
          }
        },
        "deprecated": {
          "default": false,
          "type": "boolean"
        },
        "bindings": {
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/messageBindingsObject"
            }
          ]
        },
        "contentType": {
          "description": "The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. application/json). When omitted, the value MUST be the one specified on the defaultContentType field.",
          "type": "string"
        },
        "correlationId": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/correlationId"
          }
        },
        "externalDocs": {
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/externalDocs"
            }
          ]
        },
        "headers": {
          "$ref": "#/definitions/anySchema"
        },
        "name": {
          "description": "Name of the message.",
          "type": "string"
        },
        "summary": {
          "description": "A brief summary of the message.",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Reference"
              },
              {
                "$ref": "#/definitions/tag"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "multiFormatSchema": {
      "description": "The Multi Format Schema Object represents a schema definition. It differs from the Schema Object in that it supports multiple schema formats or languages (e.g., JSON Schema, Avro, etc.).",
      "type": "object",
      "if": {
        "not": {
          "type": "object"
        }
      },
      "then": {
        "$ref": "#/definitions/schema"
      },
      "else": {
        "allOf": [
          {
            "if": {
              "not": {
                "description": "If no schemaFormat has been defined, default to schema or reference",
                "required": [ "schemaFormat" ]
              }
            },
            "then": {
              "properties": {
                "schema": {
                  "$ref": "#/definitions/schema"
                }
              }
            }
          },
          {
            "if": {
              "description": "If schemaFormat has been defined check if it's one of the AsyncAPI Schema Object formats",
              "required": [ "schemaFormat" ],
              "properties": {
                "schemaFormat": {
                  "enum": [
                    "application/vnd.aai.asyncapi;version=2.0.0",
                    "application/vnd.aai.asyncapi+json;version=2.0.0",
                    "application/vnd.aai.asyncapi+yaml;version=2.0.0",
                    "application/vnd.aai.asyncapi;version=2.1.0",
                    "application/vnd.aai.asyncapi+json;version=2.1.0",
                    "application/vnd.aai.asyncapi+yaml;version=2.1.0",
                    "application/vnd.aai.asyncapi;version=2.2.0",
                    "application/vnd.aai.asyncapi+json;version=2.2.0",
                    "application/vnd.aai.asyncapi+yaml;version=2.2.0",
                    "application/vnd.aai.asyncapi;version=2.3.0",
                    "application/vnd.aai.asyncapi+json;version=2.3.0",
                    "application/vnd.aai.asyncapi+yaml;version=2.3.0",
                    "application/vnd.aai.asyncapi;version=2.4.0",
                    "application/vnd.aai.asyncapi+json;version=2.4.0",
                    "application/vnd.aai.asyncapi+yaml;version=2.4.0",
                    "application/vnd.aai.asyncapi;version=2.5.0",
                    "application/vnd.aai.asyncapi+json;version=2.5.0",
                    "application/vnd.aai.asyncapi+yaml;version=2.5.0",
                    "application/vnd.aai.asyncapi;version=2.6.0",
                    "application/vnd.aai.asyncapi+json;version=2.6.0",
                    "application/vnd.aai.asyncapi+yaml;version=2.6.0",
                    "application/vnd.aai.asyncapi;version=3.0.0",
                    "application/vnd.aai.asyncapi+json;version=3.0.0",
                    "application/vnd.aai.asyncapi+yaml;version=3.0.0"
                  ]
                }
              }
            },
            "then": {
              "properties": {
                "schema": {
                  "$ref": "#/definitions/schema"
                }
              }
            }
          },
          {
            "if": {
              "required": [ "schemaFormat" ],
              "properties": {
                "schemaFormat": {
                  "enum": [
                    "application/schema+json;version=draft-07",
                    "application/schema+yaml;version=draft-07"
                  ]
                }
              }
            },
            "then": {
              "properties": {
                "schema": {
                  "$ref": "#/definitions/json-schema-draft-07-schema"
                }
              }
            }
          },
          {
            "if": {
              "required": [ "schemaFormat" ],
              "properties": {
                "schemaFormat": {
                  "enum": [
                    "application/vnd.oai.openapi;version=3.0.0",
                    "application/vnd.oai.openapi+json;version=3.0.0",
                    "application/vnd.oai.openapi+yaml;version=3.0.0"
                  ]
                }
              }
            },
            "then": {
              "properties": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/Reference"
                    },
                    {
                      "$ref": "#/definitions/openapiSchema_3_0"
                    }
                  ]
                }
              }
            }
          },
          {
            "if": {
              "required": [ "schemaFormat" ],
              "properties": {
                "schemaFormat": {
                  "enum": [
                    "application/vnd.apache.avro;version=1.9.0",
                    "application/vnd.apache.avro+json;version=1.9.0",
                    "application/vnd.apache.avro+yaml;version=1.9.0"
                  ]
                }
              }
            },
            "then": {
              "properties": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/Reference"
                    },
                    {
                      "$ref": "#/definitions/avroSchema_v1"
                    }
                  ]
                }
              }
            }
          },
          {
            "if": {
              "required": [ "schemaFormat" ],
              "properties": {
                "schemaFormat": {
                  "enum": [
                    "application/raml+yaml;version=1.0",
                    "application/vnd.google.protobuf;version=2",
                    "application/vnd.google.protobuf;version=3",
                    "application/xml"
                  ]
                }
              }
            },
            "then": {
              "properties": {
                "schema": {
                  "type": [ "string", "object" ]
                }
              }
            }
          }
        ],
        "properties": {
          "schemaFormat": {
            "description": "A string containing the name of the schema format that is used to define the information. If schemaFormat is missing, it MUST default to application/vnd.aai.asyncapi+json;version={{asyncapi}} where {{asyncapi}} matches the AsyncAPI Version String. In such a case, this would make the Multi Format Schema Object equivalent to the Schema Object. When using Reference Object within the schema, the schemaFormat of the resource being referenced MUST match the schemaFormat of the schema that contains the initial reference. For example, if you reference Avro schema, then schemaFormat of referencing resource and the resource being reference MUST match.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "description": "All the schema formats tooling MUST support",
                "enum": [
                  "application/schema+json;version=draft-07",
                  "application/schema+yaml;version=draft-07",
                  "application/vnd.aai.asyncapi;version=3.0.0",
                  "application/vnd.aai.asyncapi+json;version=3.0.0",
                  "application/vnd.aai.asyncapi+yaml;version=3.0.0"
                ]
              },
              {
                "description": "All the schema formats tools are RECOMMENDED to support",
                "enum": [
                  "application/vnd.oai.openapi;version=3.0.0",
                  "application/vnd.oai.openapi+json;version=3.0.0",
                  "application/vnd.oai.openapi+yaml;version=3.0.0",
                  "application/vnd.apache.avro;version=1.9.0",
                  "application/vnd.apache.avro+json;version=1.9.0",
                  "application/vnd.apache.avro+yaml;version=1.9.0",
                  "application/raml+yaml;version=1.0",
                  "application/vnd.google.protobuf;version=2",
                  "application/vnd.google.protobuf;version=3",
                  "application/xml"
                ]
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      }
    },
    "oauth2Flow": {
      "description": "Configuration details for a supported OAuth Flow",
      "examples": [
        {
          "authorizationUrl": "https://example.com/api/oauth/dialog",
          "availableScopes": {
            "read:pets": "read your pets",
            "write:pets": "modify pets in your account"
          },
          "tokenUrl": "https://example.com/api/oauth/token"
        }
      ],
      "type": "object",
      "properties": {
        "authorizationUrl": {
          "description": "The authorization URL to be used for this flow. This MUST be in the form of an absolute URL.",
          "type": "string",
          "format": "uri"
        },
        "availableScopes": {
          "description": "The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it.",
          "$ref": "#/definitions/oauth2Scopes"
        },
        "refreshUrl": {
          "description": "The URL to be used for obtaining refresh tokens. This MUST be in the form of an absolute URL.",
          "type": "string",
          "format": "uri"
        },
        "tokenUrl": {
          "description": "The token URL to be used for this flow. This MUST be in the form of an absolute URL.",
          "type": "string",
          "format": "uri"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "oauth2Flows": {
      "description": "Allows configuration of the supported OAuth Flows.",
      "type": "object",
      "required": [ "type", "flows" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "oauth2" ]
        },
        "flows": {
          "type": "object",
          "properties": {
            "authorizationCode": {
              "description": "Configuration for the OAuth Authorization Code flow.",
              "allOf": [
                {
                  "$ref": "#/definitions/oauth2Flow"
                },
                {
                  "required": [
                    "authorizationUrl",
                    "tokenUrl",
                    "availableScopes"
                  ]
                }
              ]
            },
            "clientCredentials": {
              "description": "Configuration for the OAuth Client Credentials flow.",
              "allOf": [
                {
                  "$ref": "#/definitions/oauth2Flow"
                },
                {
                  "required": [ "tokenUrl", "availableScopes" ]
                },
                {
                  "not": {
                    "required": [ "authorizationUrl" ]
                  }
                }
              ]
            },
            "implicit": {
              "description": "Configuration for the OAuth Implicit flow.",
              "allOf": [
                {
                  "$ref": "#/definitions/oauth2Flow"
                },
                {
                  "required": [ "authorizationUrl", "availableScopes" ]
                },
                {
                  "not": {
                    "required": [ "tokenUrl" ]
                  }
                }
              ]
            },
            "password": {
              "description": "Configuration for the OAuth Resource Owner Protected Credentials flow.",
              "allOf": [
                {
                  "$ref": "#/definitions/oauth2Flow"
                },
                {
                  "required": [ "tokenUrl", "availableScopes" ]
                },
                {
                  "not": {
                    "required": [ "authorizationUrl" ]
                  }
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "scopes": {
          "description": "List of the needed scope names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      }
    },
    "oauth2Scopes": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "openIdConnect": {
      "type": "object",
      "required": [ "type", "openIdConnectUrl" ],
      "properties": {
        "description": {
          "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation.",
          "type": "string"
        },
        "type": {
          "description": "The type of the security scheme.",
          "type": "string",
          "enum": [ "openIdConnect" ]
        },
        "openIdConnectUrl": {
          "description": "OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of an absolute URL.",
          "type": "string",
          "format": "uri"
        },
        "scopes": {
          "description": "List of the needed scope names. An empty array means no scopes are needed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "openapiSchema_3_0": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "deprecated": {
          "default": false,
          "type": "boolean"
        },
        "readOnly": {
          "default": false,
          "type": "boolean"
        },
        "writeOnly": {
          "default": false,
          "type": "boolean"
        },
        "default": true,
        "type": {
          "type": "string",
          "enum": [
            "array",
            "boolean",
            "integer",
            "number",
            "object",
            "string"
          ]
        },
        "enum": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": false,
          "items": true
        },
        "allOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/openapiSchema_3_0"
              },
              {
                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
              }
            ]
          }
        },
        "anyOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/openapiSchema_3_0"
              },
              {
                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
              }
            ]
          }
        },
        "oneOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/openapiSchema_3_0"
              },
              {
                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
              }
            ]
          }
        },
        "not": {
          "oneOf": [
            {
              "$ref": "#/definitions/openapiSchema_3_0"
            },
            {
              "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
            }
          ]
        },
        "exclusiveMaximum": {
          "default": false,
          "type": "boolean"
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "default": false,
          "type": "boolean"
        },
        "minimum": {
          "type": "number"
        },
        "multipleOf": {
          "type": "number",
          "exclusiveMinimum": 0
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "format": {
          "type": "string"
        },
        "maxLength": {
          "type": "integer",
          "minimum": 0
        },
        "minLength": {
          "default": 0,
          "type": "integer",
          "minimum": 0
        },
        "maxItems": {
          "type": "integer",
          "minimum": 0
        },
        "minItems": {
          "default": 0,
          "type": "integer",
          "minimum": 0
        },
        "uniqueItems": {
          "default": false,
          "type": "boolean"
        },
        "items": {
          "oneOf": [
            {
              "$ref": "#/definitions/openapiSchema_3_0"
            },
            {
              "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
            }
          ]
        },
        "required": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "maxProperties": {
          "type": "integer",
          "minimum": 0
        },
        "minProperties": {
          "default": 0,
          "type": "integer",
          "minimum": 0
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/openapiSchema_3_0"
              },
              {
                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
              }
            ]
          }
        },
        "additionalProperties": {
          "default": true,
          "oneOf": [
            {
              "$ref": "#/definitions/openapiSchema_3_0"
            },
            {
              "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "discriminator": {
          "$ref": "#/definitions/openapiSchema_3_0/definitions/Discriminator"
        },
        "example": true,
        "externalDocs": {
          "$ref": "#/definitions/openapiSchema_3_0/definitions/ExternalDocumentation"
        },
        "nullable": {
          "default": false,
          "type": "boolean"
        },
        "xml": {
          "$ref": "#/definitions/openapiSchema_3_0/definitions/XML"
        }
      },
      "patternProperties": {
        "^x-": true
      },
      "additionalProperties": false,
      "definitions": {
        "Discriminator": {
          "type": "object",
          "required": [ "propertyName" ],
          "properties": {
            "mapping": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "propertyName": {
              "type": "string"
            }
          }
        },
        "ExternalDocumentation": {
          "type": "object",
          "required": [ "url" ],
          "properties": {
            "description": {
              "type": "string"
            },
            "url": {
              "type": "string",
              "format": "uri-reference"
            }
          },
          "patternProperties": {
            "^x-": {}
          },
          "additionalProperties": false
        },
        "Reference": {
          "type": "object",
          "required": [ "$ref" ],
          "patternProperties": {
            "^\\$ref$": {
              "type": "string",
              "format": "uri-reference"
            }
          }
        },
        "XML": {
          "type": "object",
          "properties": {
            "attribute": {
              "default": false,
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string",
              "format": "uri"
            },
            "prefix": {
              "type": "string"
            },
            "wrapped": {
              "default": false,
              "type": "boolean"
            }
          },
          "patternProperties": {
            "^x-": {}
          },
          "additionalProperties": false
        }
      }
    },
    "operation": {
      "description": "Describes a specific operation.",
      "examples": [
        {
          "title": "User sign up",
          "description": "A longer description",
          "action": "send",
          "bindings": {
            "amqp": {
              "ack": false
            }
          },
          "channel": {
            "$ref": "#/channels/userSignup"
          },
          "messages": [
            {
              "$ref": "/components/messages/userSignedUp"
            }
          ],
          "reply": {
            "address": {
              "location": "$message.header#/replyTo"
            },
            "channel": {
              "$ref": "#/channels/userSignupReply"
            },
            "messages": [
              {
                "$ref": "/components/messages/userSignedUpReply"
              }
            ]
          },
          "security": [
            {
              "petstore_auth": [ "write:pets", "read:pets" ]
            }
          ],
          "summary": "Action to sign a user up.",
          "tags": [
            {
              "name": "user"
            },
            {
              "name": "signup"
            },
            {
              "name": "register"
            }
          ],
          "traits": [
            {
              "$ref": "#/components/operationTraits/kafka"
            }
          ]
        }
      ],
      "type": "object",
      "required": [ "action", "channel" ],
      "properties": {
        "title": {
          "description": "A human-friendly title for the operation.",
          "type": "string"
        },
        "description": {
          "description": "A longer description of the operation. CommonMark is allowed.",
          "type": "string"
        },
        "action": {
          "description": "Allowed values are send and receive. Use send when it's expected that the application will send a message to the given channel, and receive when the application should expect receiving messages from the given channel.",
          "type": "string",
          "enum": [ "send", "receive" ]
        },
        "bindings": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/operationBindingsObject"
          }
        },
        "channel": {
          "$ref": "#/definitions/Reference"
        },
        "externalDocs": {
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/externalDocs"
            }
          ]
        },
        "messages": {
          "description": "A list of $ref pointers pointing to the supported Message Objects that can be processed by this operation. It MUST contain a subset of the messages defined in the channel referenced in this operation. Every message processed by this operation MUST be valid against one, and only one, of the message objects referenced in this list. Please note the messages property value MUST be a list of Reference Objects and, therefore, MUST NOT contain Message Objects. However, it is RECOMMENDED that parsers (or other software) dereference this property for a better development experience.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "reply": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/operationReply"
          }
        },
        "security": {
          "$ref": "#/definitions/securityRequirements"
        },
        "summary": {
          "description": "A brief summary of the operation.",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags for logical grouping and categorization of operations.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Reference"
              },
              {
                "$ref": "#/definitions/tag"
              }
            ]
          }
        },
        "traits": {
          "description": "A list of traits to apply to the operation object. Traits MUST be merged using traits merge mechanism. The resulting object MUST be a valid Operation Object.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Reference"
              },
              {
                "$ref": "#/definitions/operationTrait"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "operationBindingsObject": {
      "description": "Map describing protocol-specific definitions for an operation.",
      "type": "object",
      "properties": {
        "amqp": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-amqp-0.3.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-amqp-0.3.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.3.0" ]
            }
          }
        },
        "amqp1": {},
        "anypointmq": {},
        "googlepubsub": {},
        "http": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-http-0.3.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-http-0.2.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-http-0.3.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0", "0.3.0" ]
            }
          }
        },
        "ibmmq": {},
        "jms": {},
        "kafka": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.5.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.4.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.4.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.3.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.5.0", "0.4.0", "0.3.0" ]
            }
          }
        },
        "mqtt": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-mqtt-0.2.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-mqtt-0.2.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0" ]
            }
          }
        },
        "nats": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-nats-0.1.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-nats-0.1.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "redis": {},
        "sns": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sns-0.1.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sns-0.1.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "solace": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.4.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.4.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.4.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.3.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.2.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.4.0", "0.3.0", "0.2.0" ]
            }
          }
        },
        "sqs": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sqs-0.2.0-operation"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-sqs-0.2.0-operation"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0" ]
            }
          }
        },
        "stomp": {},
        "ws": {}
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "operationReply": {
      "description": "Describes the reply part that MAY be applied to an Operation Object. If an operation implements the request/reply pattern, the reply object represents the response message.",
      "type": "object",
      "properties": {
        "address": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/operationReplyAddress"
          }
        },
        "channel": {
          "$ref": "#/definitions/Reference"
        },
        "messages": {
          "description": "A list of $ref pointers pointing to the supported Message Objects that can be processed by this operation as reply. It MUST contain a subset of the messages defined in the channel referenced in this operation reply. Every message processed by this operation MUST be valid against one, and only one, of the message objects referenced in this list. Please note the messages property value MUST be a list of Reference Objects and, therefore, MUST NOT contain Message Objects. However, it is RECOMMENDED that parsers (or other software) dereference this property for a better development experience.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "operationReplyAddress": {
      "description": "An object that specifies where an operation has to send the reply",
      "examples": [
        {
          "description": "Consumer inbox",
          "location": "$message.header#/replyTo"
        }
      ],
      "type": "object",
      "required": [ "location" ],
      "properties": {
        "description": {
          "description": "An optional description of the address. CommonMark is allowed.",
          "type": "string"
        },
        "location": {
          "description": "A runtime expression that specifies the location of the reply address.",
          "type": "string",
          "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "operationTrait": {
      "description": "Describes a trait that MAY be applied to an Operation Object. This object MAY contain any property from the Operation Object, except the action, channel and traits ones.",
      "examples": [
        {
          "bindings": {
            "amqp": {
              "ack": false
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "A human-friendly title for the operation.",
          "$ref": "#/definitions/operation/properties/title"
        },
        "description": {
          "description": "A verbose explanation of the operation. CommonMark syntax can be used for rich text representation.",
          "$ref": "#/definitions/operation/properties/description"
        },
        "bindings": {
          "description": "A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.",
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/operationBindingsObject"
            }
          ]
        },
        "externalDocs": {
          "description": "Additional external documentation for this operation.",
          "$ref": "#/definitions/operation/properties/externalDocs"
        },
        "security": {
          "description": "A declaration of which security schemes are associated with this operation. Only one of the security scheme objects MUST be satisfied to authorize an operation. In cases where Server Security also applies, it MUST also be satisfied.",
          "$ref": "#/definitions/operation/properties/security"
        },
        "summary": {
          "description": "A short summary of what the operation is about.",
          "$ref": "#/definitions/operation/properties/summary"
        },
        "tags": {
          "description": "A list of tags for logical grouping and categorization of operations.",
          "$ref": "#/definitions/operation/properties/tags"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "operations": {
      "description": "Holds a dictionary with all the operations this application MUST implement.",
      "examples": [
        {
          "onUserSignUp": {
            "title": "User sign up",
            "description": "A longer description",
            "action": "send",
            "bindings": {
              "amqp": {
                "ack": false
              }
            },
            "channel": {
              "$ref": "#/channels/userSignup"
            },
            "summary": "Action to sign a user up.",
            "tags": [
              {
                "name": "user"
              },
              {
                "name": "signup"
              },
              {
                "name": "register"
              }
            ],
            "traits": [
              {
                "$ref": "#/components/operationTraits/kafka"
              }
            ]
          }
        }
      ],
      "type": "object",
      "additionalProperties": {
        "if": {
          "required": [ "$ref" ]
        },
        "then": {
          "$ref": "#/definitions/Reference"
        },
        "else": {
          "$ref": "#/definitions/operation"
        }
      }
    },
    "parameter": {
      "description": "Describes a parameter included in a channel address.",
      "examples": [
        {
          "address": "user/{userId}/signedup",
          "parameters": {
            "userId": {
              "description": "Id of the user.",
              "location": "$message.payload#/user/id"
            }
          }
        }
      ],
      "properties": {
        "description": {
          "description": "A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed.",
          "type": "string"
        },
        "examples": {
          "description": "An array of examples of the parameter value.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "description": "The default value to use for substitution, and to send, if an alternate value is not supplied.",
          "type": "string"
        },
        "enum": {
          "description": "An enumeration of string values to be used if the substitution options are from a limited set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "description": "A runtime expression that specifies the location of the parameter value",
          "type": "string",
          "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "parameters": {
      "description": "JSON objects describing re-usable channel parameters.",
      "examples": [
        {
          "address": "user/{userId}/signedup",
          "parameters": {
            "userId": {
              "description": "Id of the user."
            }
          }
        }
      ],
      "type": "object",
      "additionalProperties": {
        "if": {
          "required": [ "$ref" ]
        },
        "then": {
          "$ref": "#/definitions/Reference"
        },
        "else": {
          "$ref": "#/definitions/parameter"
        }
      }
    },
    "schema": {
      "description": "The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is a superset of the JSON Schema Specification Draft 07. The empty schema (which allows any instance to validate) MAY be represented by the boolean value true and a schema which allows no instance to validate MAY be represented by the boolean value false.",
      "allOf": [
        {
          "$ref": "#/definitions/json-schema-draft-07-schema"
        },
        {
          "properties": {
            "deprecated": {
              "description": "Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is false.",
              "default": false,
              "type": "boolean"
            },
            "allOf": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/schema"
              }
            },
            "anyOf": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/schema"
              }
            },
            "oneOf": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/schema"
              }
            },
            "not": {
              "$ref": "#/definitions/schema"
            },
            "contains": {
              "$ref": "#/definitions/schema"
            },
            "items": {
              "default": {},
              "anyOf": [
                {
                  "$ref": "#/definitions/schema"
                },
                {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "$ref": "#/definitions/schema"
                  }
                }
              ]
            },
            "propertyNames": {
              "$ref": "#/definitions/schema"
            },
            "properties": {
              "default": {},
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/schema"
              }
            },
            "patternProperties": {
              "default": {},
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/schema"
              }
            },
            "additionalProperties": {
              "default": {},
              "anyOf": [
                {
                  "$ref": "#/definitions/schema"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "discriminator": {
              "description": "Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the required property list. When used, the value MUST be the name of this schema or any schema that inherits it. See Composition and Inheritance for more details.",
              "type": "string"
            },
            "externalDocs": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/externalDocs"
                }
              ]
            }
          },
          "patternProperties": {
            "^x-[\\w\\d\\.\\x2d_]+$": {
              "$ref": "#/definitions/specificationExtension"
            }
          }
        }
      ]
    },
    "securityRequirements": {
      "description": "An array representing security requirements.",
      "type": "array",
      "items": {
        "if": {
          "required": [ "$ref" ]
        },
        "then": {
          "$ref": "#/definitions/Reference"
        },
        "else": {
          "$ref": "#/definitions/SecurityScheme"
        }
      }
    },
    "server": {
      "description": "An object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data.",
      "examples": [
        {
          "description": "Production Kafka broker.",
          "host": "kafka.in.mycompany.com:9092",
          "protocol": "kafka",
          "protocolVersion": "3.2"
        },
        {
          "description": "Production RabbitMQ broker (uses the `production` vhost).",
          "host": "rabbitmq.in.mycompany.com:5672",
          "pathname": "/production",
          "protocol": "amqp"
        }
      ],
      "type": "object",
      "required": [ "host", "protocol" ],
      "properties": {
        "title": {
          "description": "A human-friendly title for the server.",
          "type": "string"
        },
        "description": {
          "description": "A longer description of the server. CommonMark is allowed.",
          "type": "string"
        },
        "bindings": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/serverBindingsObject"
          }
        },
        "externalDocs": {
          "oneOf": [
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "$ref": "#/definitions/externalDocs"
            }
          ]
        },
        "host": {
          "description": "The server host name. It MAY include the port. This field supports Server Variables. Variable substitutions will be made when a variable is named in {braces}.",
          "type": "string"
        },
        "pathname": {
          "description": "The path to a resource in the host. This field supports Server Variables. Variable substitutions will be made when a variable is named in {braces}.",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol this server supports for connection.",
          "type": "string"
        },
        "protocolVersion": {
          "description": "An optional string describing the server. CommonMark syntax MAY be used for rich text representation.",
          "type": "string"
        },
        "security": {
          "$ref": "#/definitions/securityRequirements"
        },
        "summary": {
          "description": "A brief summary of the server.",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Reference"
              },
              {
                "$ref": "#/definitions/tag"
              }
            ]
          }
        },
        "variables": {
          "$ref": "#/definitions/serverVariables"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "serverBindingsObject": {
      "description": "Map describing protocol-specific definitions for a server.",
      "type": "object",
      "properties": {
        "amqp": {},
        "amqp1": {},
        "anypointmq": {},
        "googlepubsub": {},
        "http": {},
        "ibmmq": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-ibmmq-0.1.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-ibmmq-0.1.0-server"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "jms": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-jms-0.0.1-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.0.1"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-jms-0.0.1-server"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.0.1" ]
            }
          }
        },
        "kafka": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.5.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.5.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.4.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.4.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-kafka-0.3.0-server"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.5.0", "0.4.0", "0.3.0" ]
            }
          }
        },
        "mqtt": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-mqtt-0.2.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-mqtt-0.2.0-server"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.2.0" ]
            }
          }
        },
        "nats": {},
        "pulsar": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-pulsar-0.1.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.1.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-pulsar-0.1.0-server"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.1.0" ]
            }
          }
        },
        "redis": {},
        "sns": {},
        "solace": {
          "allOf": [
            {
              "description": "If no bindingVersion specified, use the latest binding",
              "if": {
                "not": {
                  "required": [ "bindingVersion" ]
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.4.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.4.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.4.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.3.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.3.0-server"
              }
            },
            {
              "if": {
                "required": [ "bindingVersion" ],
                "properties": {
                  "bindingVersion": {
                    "const": "0.2.0"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/bindings-solace-0.2.0-server"
              }
            }
          ],
          "properties": {
            "bindingVersion": {
              "enum": [ "0.4.0", "0.3.0", "0.2.0" ]
            }
          }
        },
        "sqs": {},
        "stomp": {},
        "ws": {}
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "serverVariable": {
      "description": "An object representing a Server Variable for server URL template substitution.",
      "examples": [
        {
          "description": "RabbitMQ broker. Use the `env` variable to point to either `production` or `staging`.",
          "host": "rabbitmq.in.mycompany.com:5672",
          "pathname": "/{env}",
          "protocol": "amqp",
          "variables": {
            "env": {
              "description": "Environment to connect to. It can be either `production` or `staging`.",
              "enum": [ "production", "staging" ]
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "An optional description for the server variable. CommonMark syntax MAY be used for rich text representation.",
          "type": "string"
        },
        "examples": {
          "description": "An array of examples of the server variable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "description": "The default value to use for substitution, and to send, if an alternate value is not supplied.",
          "type": "string"
        },
        "enum": {
          "description": "An enumeration of string values to be used if the substitution options are from a limited set.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "serverVariables": {
      "type": "object",
      "additionalProperties": {
        "if": {
          "required": [ "$ref" ]
        },
        "then": {
          "$ref": "#/definitions/Reference"
        },
        "else": {
          "$ref": "#/definitions/serverVariable"
        }
      }
    },
    "servers": {
      "description": "An object representing multiple servers.",
      "examples": [
        {
          "development": {
            "description": "Development AMQP broker.",
            "host": "localhost:5672",
            "protocol": "amqp",
            "protocolVersion": "0-9-1",
            "tags": [
              {
                "description": "This environment is meant for developers to run their own tests.",
                "name": "env:development"
              }
            ]
          },
          "production": {
            "description": "RabbitMQ broker for the production environment.",
            "host": "rabbitmq.in.mycompany.com:5672",
            "protocol": "amqp",
            "protocolVersion": "0-9-1",
            "tags": [
              {
                "description": "This environment is the live environment available for final users.",
                "name": "env:production"
              }
            ]
          },
          "staging": {
            "description": "RabbitMQ broker for the staging environment.",
            "host": "rabbitmq-staging.in.mycompany.com:5672",
            "protocol": "amqp",
            "protocolVersion": "0-9-1",
            "tags": [
              {
                "description": "This environment is a replica of the production environment.",
                "name": "env:staging"
              }
            ]
          }
        }
      ],
      "type": "object",
      "additionalProperties": {
        "if": {
          "required": [ "$ref" ]
        },
        "then": {
          "$ref": "#/definitions/Reference"
        },
        "else": {
          "$ref": "#/definitions/server"
        }
      }
    },
    "specificationExtension": {
      "description": "Any property starting with x- is valid.",
      "additionalItems": true,
      "additionalProperties": true
    },
    "symmetricEncryption": {
      "examples": [
        {
          "type": "symmetricEncryption"
        }
      ],
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [ "symmetricEncryption" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "tag": {
      "description": "Allows adding metadata to a single tag.",
      "examples": [
        {
          "description": "User-related messages",
          "name": "user"
        }
      ],
      "type": "object",
      "required": [ "name" ],
      "properties": {
        "description": {
          "description": "A short description for the tag. CommonMark syntax can be used for rich text representation.",
          "type": "string"
        },
        "externalDocs": {
          "if": {
            "required": [ "$ref" ]
          },
          "then": {
            "$ref": "#/definitions/Reference"
          },
          "else": {
            "$ref": "#/definitions/externalDocs"
          }
        },
        "name": {
          "description": "The name of the tag.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    },
    "userPassword": {
      "examples": [
        {
          "type": "userPassword"
        }
      ],
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [ "userPassword" ]
        }
      },
      "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
          "$ref": "#/definitions/specificationExtension"
        }
      },
      "additionalProperties": false
    }
  }
}
